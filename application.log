[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.application.HelloApplication  - Sorry, the main fxml could not be loaded
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.access.Connection  - Initial SessionFactory created failedorg.hibernate.internal.util.config.ConfigurationException: Could not locate cfg.xml resource [hibernate.cfg.xml]
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.access.Connection  - Initial SessionFactory created failedorg.hibernate.boot.registry.classloading.spi.ClassLoadingException: Unable to load class [bg.tu_varna.sit.example.data.entities.Admin]
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.access.Connection  - Initial SessionFactory created failedorg.hibernate.MappingException: Could not instantiate persister org.hibernate.persister.entity.SingleTableEntityPersister
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.access.Connection  - Initial SessionFactory created failedorg.hibernate.AnnotationException: Unknown mappedBy in: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product, referenced property unknown: bg.tu_varna.sit.inventorymanagement.data.entities.Product.byAmortization
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Access denied for user 'root'@'localhost' (using password: YES)
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.access.Connection  - Initial SessionFactory created failedorg.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Column 'id_condition' cannot be null
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product save errorcould not execute statement
[JavaFX Application Thread] ERROR org.hibernate.AssertionFailure  - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in bg.tu_varna.sit.inventorymanagement.data.entities.Product entry (don't flush the Session after an exception occurs)
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Column 'id_condition' cannot be null
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product save errorcould not execute statement
[JavaFX Application Thread] ERROR org.hibernate.AssertionFailure  - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in bg.tu_varna.sit.inventorymanagement.data.entities.Product entry (don't flush the Session after an exception occurs)
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Column 'id_condition' cannot be null
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product save errorcould not execute statement
[JavaFX Application Thread] ERROR org.hibernate.AssertionFailure  - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in bg.tu_varna.sit.inventorymanagement.data.entities.Product entry (don't flush the Session after an exception occurs)
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Column 'id_mol' cannot be null
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product save errorcould not execute statement
[JavaFX Application Thread] ERROR org.hibernate.AssertionFailure  - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in bg.tu_varna.sit.inventorymanagement.data.entities.Product entry (don't flush the Session after an exception occurs)
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Column 'id_mol' cannot be null
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product save errorcould not execute statement
[JavaFX Application Thread] ERROR org.hibernate.AssertionFailure  - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in bg.tu_varna.sit.inventorymanagement.data.entities.Product entry (don't flush the Session after an exception occurs)
[JavaFX Application Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Column 'id_amortization' cannot be null
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product save errorcould not execute statement
[JavaFX Application Thread] ERROR org.hibernate.AssertionFailure  - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in bg.tu_varna.sit.inventorymanagement.data.entities.Product entry (don't flush the Session after an exception occurs)
[Hibernate Connection Pool Validation Thread] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] ERROR bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board update errorThe given object has a null identifier: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[JavaFX Application Thread] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version [WORKING]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6ae730f2
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@6ae730f2
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ae730f2
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@710a7470
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f548088
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a598e8b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@551ced59
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@551ced59
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@551ced59
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@546aa666
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@546aa666
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@546aa666
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@151c67e6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@151c67e6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@151c67e6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@665f4caa
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@665f4caa
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@665f4caa
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@7aebdbcb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@7aebdbcb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aebdbcb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@44c88e58
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@44c88e58
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44c88e58
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@2e1c3007
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@2e1c3007
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2e1c3007
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2e77db04
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2e77db04
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4678532b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4678532b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@50630c91
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@50630c91
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6848beb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@712411b7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@5f6e417
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5f6e417
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7930bf27
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7930bf27
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3cd97536
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3cd97536
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b11b6f1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5b11b6f1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3febd3cb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3febd3cb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7e754161
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7e754161
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70fb1931
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@70fb1931
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@673dcf18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@673dcf18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e5eaef8
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e5eaef8
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@569ff92a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@569ff92a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@14428f9f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@14428f9f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f81a65f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f81a65f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f81a65f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f1b41bf
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@410bb061
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@410bb061
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@410bb061
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a3805f8
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6436c97
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@244b14b9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@244b14b9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@2127fb4e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2127fb4e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@45cd5273
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@45cd5273
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@48ce3001
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48ce3001
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b0a2323
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b0a2323
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@40871d8f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@1b88ad18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b88ad18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@1b88ad18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f4803ff
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f4803ff
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f4803ff
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@710aca01
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@517d874c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@551316c7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@551316c7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@551316c7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c4723f4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c4723f4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c4723f4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@350786c0
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@bf923cb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@5bd72e97
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5bd72e97
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@30837fb7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@54b0b485
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54b0b485
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@57dd341d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57dd341d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fc9872f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@139c8b74
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@7cdecbdc
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@396e883e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@396e883e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e9573df
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a133c62
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c4c7ea1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1626e7db
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3388654b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@307baf74
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f4d76ac
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e7456a1
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/inventory]
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=root1, user=root}
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 3 (min=1)
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.27 (Revision: e920b979015ae7117d60d72bcc8f077a839cd791)
      major : 8
      minor : 0
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in more than one case
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59f8498d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5711509c]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Admin on table admins
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=id_admin, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Admin] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idAdmin with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:idAdmin]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_admin)]), idAdmin, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=password, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:password]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=username, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:username]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Condition on table conditions
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=id_condition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Condition] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCondition with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Condition:idCondition]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_condition)]), idCondition, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=prod_condition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodCondition with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Condition:prodCondition]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Customer on table customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=id_customer, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Customer] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCustomer with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:idCustomer]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_customer)]), idCustomer, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=cus_name, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property cusName with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:cusName]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=customers, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=customers_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='customers_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=email, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:email]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=tel_num, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property telNum with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:telNum]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard on table customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=id_customer_board, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCustomerBoard with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:idCustomerBoard]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_customer_board)]), idCustomerBoard, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_customer', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=byCustomer, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_inventory_number', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=byInventoryNumber, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=registered_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property registeredDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:registeredDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=return_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property returnDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:returnDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Mol on table mols
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=id_mol, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Mol] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idMol with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:idMol]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_mol)]), idMol, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=email, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:email]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=mol_name, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property molName with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:molName]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=password, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:password]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=tel_num, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property telNum with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:telNum]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=username, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:username]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Product on table products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=id_inventory_number, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Product] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idInventoryNumber with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:idInventoryNumber]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_inventory_number)]), idInventoryNumber, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_amortization', referencedColumn='id_amortization', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byAmortization, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_condition', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byCondition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_mol', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byMol, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=description, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property description with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:description]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=discard_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property discardDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:discardDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=exploatation_start, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property exploatationStart with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:exploatationStart]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=is_discarded, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property isDiscarded with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:isDiscarded]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=prod_status, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodStatus with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:prodStatus]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_type, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodType with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:prodType]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_value, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productValue with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:productValue]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Amortization on table amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=id_amortization, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idAmortization with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization:idAmortization]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_amortization)]), idAmortization, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=amort_deg, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amortDeg with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization:amortDeg]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byAmortization'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=product, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_admin] to be non-null as it is part of the primary key for table [admins]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_condition] to be non-null as it is part of the primary key for table [conditions]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_customer] to be non-null as it is part of the primary key for table [customers]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_customer_board] to be non-null as it is part of the primary key for table [customer_boards]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_mol] to be non-null as it is part of the primary key for table [mols]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_inventory_number] to be non-null as it is part of the primary key for table [products]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_amortization] to be non-null as it is part of the primary key for table [amortization]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products -> products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.Product.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_condition, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers -> customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_customer, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products -> products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.Product.byMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_mol, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products -> customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_inventory_number, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Processing association property references
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Processing association property references
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: 2
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=15, javafx.runtime.version=15.0.1+1, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-controls\15.0.1\javafx-controls-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-graphics\15.0.1\javafx-graphics-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-base\15.0.1\javafx-base-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-fxml\15.0.1\javafx-fxml-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-web\15.0.1\javafx-web-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-media\15.0.1\javafx-media-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\GRIGS\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\GRIGS\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\GRIGS\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\GRIGS\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\GRIGS\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\GRIGS\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\GRIGS\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\GRIGS\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\GRIGS\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\GRIGS\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\GRIGS\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\GRIGS\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\GRIGS\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\GRIGS\.m2\repository\mysql\mysql-connector-java\8.0.27\mysql-connector-java-8.0.27.jar;C:\Users\GRIGS\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Sofia, user.country.format=BG, java.vm.specification.version=15, os.name=Windows 10, javafx.version=15.0.1, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.2\bin, sun.java.command=bg.tu_varna.sit.inventorymanagement/bg.tu_varna.sit.inventorymanagement.application.HelloApplication, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\GRIGS, user.language=en, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-fxml\15.0.1\javafx-fxml-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-controls\15.0.1\javafx-controls-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-web\15.0.1\javafx-web-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\GRIGS\.m2\repository\net\synedra\validatorfx\0.1.13\validatorfx-0.1.13.jar;C:\Users\GRIGS\.m2\repository\org\controlsfx\controlsfx\11.1.0\controlsfx-11.1.0.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.2.0\ikonli-javafx-12.2.0.jar;C:\Users\GRIGS\.m2\repository\com\dlsc\formsfx\formsfx-core\11.3.2\formsfx-core-11.3.2.jar;C:\Users\GRIGS\Documents\GitHub\OOP2_Project\InventoryManagement\target\classes;C:\Users\GRIGS\.m2\repository\org\hibernate\hibernate-core\5.6.1.Final\hibernate-core-5.6.1.Final.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.4.0\bootstrapfx-core-0.4.0.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-graphics\15.0.1\javafx-graphics-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-media\15.0.1\javafx-media-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-base\15.0.1\javafx-base-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\eu\hansolo\tilesfx\11.48\tilesfx-11.48.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\ikonli\ikonli-core\12.2.0\ikonli-core-12.2.0.jar;C:\Users\GRIGS\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.version.date=2021-01-19, java.home=C:\Program Files\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=bg.tu_varna.sit.inventorymanagement.application.HelloApplication, jdk.module.main=bg.tu_varna.sit.inventorymanagement, hibernate.hbm2ddl.auto=update, user.script=, connection.password=root1, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=GRIGS, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/inventory, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\GRIGS\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\GRIGS\Documents\GitHub\OOP2_Project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=bg, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@9b6e474, java.library.path=C:\Program Files\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Users\GRIGS\AppData\Local\Microsoft\WindowsApps;C:\Users\GRIGS\.dotnet\tools;C:\Users\GRIGS\AppData\Local\GitHubDesktop\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://localhost:3306/inventory, java.class.version=59.0}
[JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59f8498d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4ff7e3f9]
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Product] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Mol] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Condition] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Customer] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Admin] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update products set id_condition=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update products set  where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update products set id_condition=null where id_condition=? and id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update products set id_condition=null where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update customer_boards set id_customer=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update customer_boards set  where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update customer_boards set id_customer=null where id_customer=? and id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update customer_boards set id_customer=null where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update products set id_mol=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update products set  where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update products set id_mol=null where id_mol=? and id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update products set id_mol=null where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update customer_boards set id_inventory_number=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update customer_boards set  where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update customer_boards set id_inventory_number=null where id_inventory_number=? and id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update customer_boards set id_inventory_number=null where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_amortization from amortization where id_amortization =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select amortizati_.id_amortization, amortizati_.amort_deg as amort_de2_1_ from amortization amortizati_ where amortizati_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into amortization (amort_deg, id_amortization) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update amortization set amort_deg=? where id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from amortization where id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into amortization (amort_deg) values (?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b072c41]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11962e0c]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : product.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c8b366b]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54248ed8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : product.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28679bb3]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10370f5e]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.byCondition)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.byMol)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
          - SQL table alias mapping - amortizati0_
          - alias suffix - 0_
          - suffixed key columns - {id_amort1_1_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol2_
                      - alias suffix - 2_
                      - suffixed key columns - {id_mol1_5_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Amortization [NONE]: select amortizati0_.id_amortization as id_amort1_1_0_, amortizati0_.amort_deg as amort_de2_1_0_, product1_.id_inventory_number as id_inven1_6_1_, product1_.id_amortization as id_amort9_6_1_, product1_.id_condition as id_cond10_6_1_, product1_.id_mol as id_mol11_6_1_, product1_.description as descript2_6_1_, product1_.discard_date as discard_3_6_1_, product1_.exploatation_start as exploata4_6_1_, product1_.is_discarded as is_disca5_6_1_, product1_.prod_status as prod_sta6_6_1_, product1_.product_type as product_7_6_1_, product1_.product_value as product_8_6_1_, mol2_.id_mol as id_mol1_5_2_, mol2_.email as email2_5_2_, mol2_.mol_name as mol_name3_5_2_, mol2_.password as password4_5_2_, mol2_.tel_num as tel_num5_5_2_, mol2_.username as username6_5_2_ from amortization amortizati0_ left outer join products product1_ on amortizati0_.id_amortization=product1_.id_amortization left outer join mols mol2_ on product1_.id_mol=mol2_.id_mol where amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_inventory_number from products where id_inventory_number =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select product_.id_inventory_number, product_.id_amortization as id_amort9_6_, product_.id_condition as id_cond10_6_, product_.id_mol as id_mol11_6_, product_.description as descript2_6_, product_.discard_date as discard_3_6_, product_.exploatation_start as exploata4_6_, product_.is_discarded as is_disca5_6_, product_.prod_status as prod_sta6_6_, product_.product_type as product_7_6_, product_.product_value as product_8_6_ from products product_ where product_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into products (id_amortization, id_condition, id_mol, description, discard_date, exploatation_start, is_discarded, prod_status, product_type, product_value, id_inventory_number) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update products set id_amortization=?, id_condition=?, id_mol=?, description=?, discard_date=?, exploatation_start=?, is_discarded=?, prod_status=?, product_type=?, product_value=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from products where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into products (id_amortization, id_condition, id_mol, description, discard_date, exploatation_start, is_discarded, prod_status, product_type, product_value) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce60dc]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d092ae6]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@beda6db]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f805622]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fe457b7]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2959ebee]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byAmortization)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byCondition)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byMol)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id_inven1_6_0_}
          - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                - SQL table alias mapping - amortizati1_
                - alias suffix - 1_
                - suffixed key columns - {id_amort1_1_1_}
          - JOIN (JoinDefinedByMetadata(byMol)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                - SQL table alias mapping - mol2_
                - alias suffix - 2_
                - suffixed key columns - {id_mol1_5_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Product [NONE]: select product0_.id_inventory_number as id_inven1_6_0_, product0_.id_amortization as id_amort9_6_0_, product0_.id_condition as id_cond10_6_0_, product0_.id_mol as id_mol11_6_0_, product0_.description as descript2_6_0_, product0_.discard_date as discard_3_6_0_, product0_.exploatation_start as exploata4_6_0_, product0_.is_discarded as is_disca5_6_0_, product0_.prod_status as prod_sta6_6_0_, product0_.product_type as product_7_6_0_, product0_.product_value as product_8_6_0_, amortizati1_.id_amortization as id_amort1_1_1_, amortizati1_.amort_deg as amort_de2_1_1_, mol2_.id_mol as id_mol1_5_2_, mol2_.email as email2_5_2_, mol2_.mol_name as mol_name3_5_2_, mol2_.password as password4_5_2_, mol2_.tel_num as tel_num5_5_2_, mol2_.username as username6_5_2_ from products product0_ left outer join amortization amortizati1_ on product0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on product0_.id_mol=mol2_.id_mol where product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Product [NONE]: select product0_.id_inventory_number as id_inven1_6_2_, product0_.id_amortization as id_amort9_6_2_, product0_.id_condition as id_cond10_6_2_, product0_.id_mol as id_mol11_6_2_, product0_.description as descript2_6_2_, product0_.discard_date as discard_3_6_2_, product0_.exploatation_start as exploata4_6_2_, product0_.is_discarded as is_disca5_6_2_, product0_.prod_status as prod_sta6_6_2_, product0_.product_type as product_7_6_2_, product0_.product_value as product_8_6_2_, amortizati1_.id_amortization as id_amort1_1_0_, amortizati1_.amort_deg as amort_de2_1_0_, mol2_.id_mol as id_mol1_5_1_, mol2_.email as email2_5_1_, mol2_.mol_name as mol_name3_5_1_, mol2_.password as password4_5_1_, mol2_.tel_num as tel_num5_5_1_, mol2_.username as username6_5_1_ from products product0_ left outer join amortization amortizati1_ on product0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on product0_.id_mol=mol2_.id_mol where product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_mol from mols where id_mol =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select mol_.id_mol, mol_.email as email2_5_, mol_.mol_name as mol_name3_5_, mol_.password as password4_5_, mol_.tel_num as tel_num5_5_, mol_.username as username6_5_ from mols mol_ where mol_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into mols (email, mol_name, password, tel_num, username, id_mol) values (?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update mols set email=?, mol_name=?, password=?, tel_num=?, username=? where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from mols where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into mols (email, mol_name, password, tel_num, username) values (?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@635b2fb4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b8da614]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f560023]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
          - SQL table alias mapping - mol0_
          - alias suffix - 0_
          - suffixed key columns - {id_mol1_5_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Mol [NONE]: select mol0_.id_mol as id_mol1_5_0_, mol0_.email as email2_5_0_, mol0_.mol_name as mol_name3_5_0_, mol0_.password as password4_5_0_, mol0_.tel_num as tel_num5_5_0_, mol0_.username as username6_5_0_ from mols mol0_ where mol0_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_customer_board from customer_boards where id_customer_board =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select customerbo_.id_customer_board, customerbo_.id_customer as id_custo4_3_, customerbo_.id_inventory_number as id_inven5_3_, customerbo_.registered_date as register2_3_, customerbo_.return_date as return_d3_3_ from customer_boards customerbo_ where customerbo_.id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into customer_boards (id_customer, id_inventory_number, registered_date, return_date, id_customer_board) values (?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update customer_boards set id_customer=?, id_inventory_number=?, registered_date=?, return_date=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from customer_boards where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into customer_boards (id_customer, id_inventory_number, registered_date, return_date) values (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@654aa2f2]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69687a32]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36bd473e]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d2ae3c0]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76645987]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c1031ec]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byCustomer)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byCondition)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byMol)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
          - SQL table alias mapping - customerbo0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo1_3_0_}
          - JOIN (JoinDefinedByMetadata(byCustomer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_4_1_}
          - JOIN (JoinDefinedByMetadata(byInventoryNumber)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {id_inven1_6_2_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati3_
                      - alias suffix - 3_
                      - suffixed key columns - {id_amort1_1_3_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:2> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol4_
                      - alias suffix - 4_
                      - suffixed key columns - {id_mol1_5_4_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard [NONE]: select customerbo0_.id_customer_board as id_custo1_3_0_, customerbo0_.id_customer as id_custo4_3_0_, customerbo0_.id_inventory_number as id_inven5_3_0_, customerbo0_.registered_date as register2_3_0_, customerbo0_.return_date as return_d3_3_0_, customer1_.id_customer as id_custo1_4_1_, customer1_.cus_name as cus_name2_4_1_, customer1_.email as email3_4_1_, customer1_.tel_num as tel_num4_4_1_, product2_.id_inventory_number as id_inven1_6_2_, product2_.id_amortization as id_amort9_6_2_, product2_.id_condition as id_cond10_6_2_, product2_.id_mol as id_mol11_6_2_, product2_.description as descript2_6_2_, product2_.discard_date as discard_3_6_2_, product2_.exploatation_start as exploata4_6_2_, product2_.is_discarded as is_disca5_6_2_, product2_.prod_status as prod_sta6_6_2_, product2_.product_type as product_7_6_2_, product2_.product_value as product_8_6_2_, amortizati3_.id_amortization as id_amort1_1_3_, amortizati3_.amort_deg as amort_de2_1_3_, mol4_.id_mol as id_mol1_5_4_, mol4_.email as email2_5_4_, mol4_.mol_name as mol_name3_5_4_, mol4_.password as password4_5_4_, mol4_.tel_num as tel_num5_5_4_, mol4_.username as username6_5_4_ from customer_boards customerbo0_ left outer join customers customer1_ on customerbo0_.id_customer=customer1_.id_customer left outer join products product2_ on customerbo0_.id_inventory_number=product2_.id_inventory_number left outer join amortization amortizati3_ on product2_.id_amortization=amortizati3_.id_amortization left outer join mols mol4_ on product2_.id_mol=mol4_.id_mol where customerbo0_.id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_condition from conditions where id_condition =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select condition_.id_condition, condition_.prod_condition as prod_con2_2_ from conditions condition_ where condition_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into conditions (prod_condition, id_condition) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update conditions set prod_condition=? where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from conditions where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into conditions (prod_condition) values (?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd118f8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@660f153c]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ead439]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
          - SQL table alias mapping - condition0_
          - alias suffix - 0_
          - suffixed key columns - {id_condi1_2_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Condition [NONE]: select condition0_.id_condition as id_condi1_2_0_, condition0_.prod_condition as prod_con2_2_0_ from conditions condition0_ where condition0_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_customer from customers where id_customer =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select customer_.id_customer, customer_.cus_name as cus_name2_4_, customer_.email as email3_4_, customer_.tel_num as tel_num4_4_ from customers customer_ where customer_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into customers (cus_name, email, tel_num, id_customer) values (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update customers set cus_name=?, email=?, tel_num=? where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from customers where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into customers (cus_name, email, tel_num) values (?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@507b10e4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : customers
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bdc1f8a]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9647d4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : telNum
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo1_4_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Customer [NONE]: select customer0_.id_customer as id_custo1_4_0_, customer0_.cus_name as cus_name2_4_0_, customer0_.email as email3_4_0_, customer0_.tel_num as tel_num4_4_0_ from customers customer0_ where customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_admin from admins where id_admin =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select admin_.id_admin, admin_.password as password2_0_, admin_.username as username3_0_ from admins admin_ where admin_.id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into admins (password, username, id_admin) values (?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update admins set password=?, username=? where id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from admins where id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into admins (password, username) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72628452]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
          - SQL table alias mapping - admin0_
          - alias suffix - 0_
          - suffixed key columns - {id_admin1_0_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Admin [NONE]: select admin0_.id_admin as id_admin1_0_0_, admin0_.password as password2_0_0_, admin0_.username as username3_0_0_ from admins admin0_ where admin0_.id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fd33cff]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ded4f4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d37c854]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a236317]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f137e5d]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3730ea2b]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.byMol)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.products.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_cond10_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_inven1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_amort1_1_2_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol2_
                      - alias suffix - 3_
                      - suffixed key columns - {id_mol1_5_3_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products: select products0_.id_condition as id_cond10_6_0_, products0_.id_inventory_number as id_inven1_6_0_, products0_.id_inventory_number as id_inven1_6_1_, products0_.id_amortization as id_amort9_6_1_, products0_.id_condition as id_cond10_6_1_, products0_.id_mol as id_mol11_6_1_, products0_.description as descript2_6_1_, products0_.discard_date as discard_3_6_1_, products0_.exploatation_start as exploata4_6_1_, products0_.is_discarded as is_disca5_6_1_, products0_.prod_status as prod_sta6_6_1_, products0_.product_type as product_7_6_1_, products0_.product_value as product_8_6_1_, amortizati1_.id_amortization as id_amort1_1_2_, amortizati1_.amort_deg as amort_de2_1_2_, mol2_.id_mol as id_mol1_5_3_, mol2_.email as email2_5_3_, mol2_.mol_name as mol_name3_5_3_, mol2_.password as password4_5_3_, mol2_.tel_num as tel_num5_5_3_, mol2_.username as username6_5_3_ from products products0_ left outer join amortization amortizati1_ on products0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on products0_.id_mol=mol2_.id_mol where products0_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46376f65]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad10046]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4474f318]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dafc3c1]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@88b4c52]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68747ab]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byAmortization)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byCondition)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byMol)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
          - SQL table alias mapping - customers0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_custo1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
                - SQL table alias mapping - customers0_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_3_1_}
                - JOIN (JoinDefinedByMetadata(byInventoryNumber)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                      - SQL table alias mapping - product1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_inven1_6_2_}
                      - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                            - SQL table alias mapping - amortizati2_
                            - alias suffix - 3_
                            - suffixed key columns - {id_amort1_1_3_}
                      - JOIN (JoinDefinedByMetadata(byMol)) : <gen:2> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                            - SQL table alias mapping - mol3_
                            - alias suffix - 4_
                            - suffixed key columns - {id_mol1_5_4_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers: select customers0_.id_customer as id_custo4_3_0_, customers0_.id_customer_board as id_custo1_3_0_, customers0_.id_customer_board as id_custo1_3_1_, customers0_.id_customer as id_custo4_3_1_, customers0_.id_inventory_number as id_inven5_3_1_, customers0_.registered_date as register2_3_1_, customers0_.return_date as return_d3_3_1_, product1_.id_inventory_number as id_inven1_6_2_, product1_.id_amortization as id_amort9_6_2_, product1_.id_condition as id_cond10_6_2_, product1_.id_mol as id_mol11_6_2_, product1_.description as descript2_6_2_, product1_.discard_date as discard_3_6_2_, product1_.exploatation_start as exploata4_6_2_, product1_.is_discarded as is_disca5_6_2_, product1_.prod_status as prod_sta6_6_2_, product1_.product_type as product_7_6_2_, product1_.product_value as product_8_6_2_, amortizati2_.id_amortization as id_amort1_1_3_, amortizati2_.amort_deg as amort_de2_1_3_, mol3_.id_mol as id_mol1_5_4_, mol3_.email as email2_5_4_, mol3_.mol_name as mol_name3_5_4_, mol3_.password as password4_5_4_, mol3_.tel_num as tel_num5_5_4_, mol3_.username as username6_5_4_ from customer_boards customers0_ left outer join products product1_ on customers0_.id_inventory_number=product1_.id_inventory_number left outer join amortization amortizati2_ on product1_.id_amortization=amortizati2_.id_amortization left outer join mols mol3_ on product1_.id_mol=mol3_.id_mol where customers0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a0e8f88]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b5a347]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@368d46e8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fb7d55f]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@382414dc]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c2bf36]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.byCondition)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.products.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_mol11_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_inven1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_amort1_1_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products: select products0_.id_mol as id_mol11_6_0_, products0_.id_inventory_number as id_inven1_6_0_, products0_.id_inventory_number as id_inven1_6_1_, products0_.id_amortization as id_amort9_6_1_, products0_.id_condition as id_cond10_6_1_, products0_.id_mol as id_mol11_6_1_, products0_.description as descript2_6_1_, products0_.discard_date as discard_3_6_1_, products0_.exploatation_start as exploata4_6_1_, products0_.is_discarded as is_disca5_6_1_, products0_.prod_status as prod_sta6_6_1_, products0_.product_type as product_7_6_1_, products0_.product_value as product_8_6_1_, amortizati1_.id_amortization as id_amort1_1_2_, amortizati1_.amort_deg as amort_de2_1_2_ from products products0_ left outer join amortization amortizati1_ on products0_.id_amortization=amortizati1_.id_amortization where products0_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cca4f17]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5674fc]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3a769e]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products].<elements>.byCustomer)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_inven5_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_custo1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_3_1_}
                - JOIN (JoinDefinedByMetadata(byCustomer)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
                      - SQL table alias mapping - customer1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_custo1_4_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Product.products: select products0_.id_inventory_number as id_inven5_3_0_, products0_.id_customer_board as id_custo1_3_0_, products0_.id_customer_board as id_custo1_3_1_, products0_.id_customer as id_custo4_3_1_, products0_.id_inventory_number as id_inven5_3_1_, products0_.registered_date as register2_3_1_, products0_.return_date as return_d3_3_1_, customer1_.id_customer as id_custo1_4_2_, customer1_.cus_name as cus_name2_4_2_, customer1_.email as email3_4_2_, customer1_.tel_num as tel_num4_4_2_ from customer_boards products0_ left outer join customers customer1_ on products0_.id_customer=customer1_.id_customer where products0_.id_inventory_number=?
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@56c0cf2e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : admins
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : amortization
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : conditions
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : customers
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : mols
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : products
[JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b785b87
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: ba86e1df-ad46-46fa-8403-d7b3718f1805 (<unnamed>)
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@624195b7
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT a FROM bg.tu_varna.sit.inventorymanagement.data.entities.Admin a 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Admin'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Admin (a) -> admin0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : a -> admin0_.id_admin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} admin0_.id_admin ) ( FromClause{level=1} admins admin0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Admin): [admins]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    |  | originalText: a
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [admins admin0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (admins)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'admin0_.id_admin as id_admin1_0_' {alias=a, className=bg.tu_varna.sit.inventorymanagement.data.entities.Admin, tableAlias=admin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'admin0_.password as password2_0_, admin0_.username as username3_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[admin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'admins admin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=admins,tableAlias=admin0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Admin}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT a FROM bg.tu_varna.sit.inventorymanagement.data.entities.Admin a 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select admin0_.id_admin as id_admin1_0_, admin0_.password as password2_0_, admin0_.username as username3_0_ from admins admin0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        admin0_.id_admin as id_admin1_0_,
        admin0_.password as password2_0_,
        admin0_.username as username3_0_ 
    from
        admins admin0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = a1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = a2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.AdminRepository  - Successfully got all admins
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Admin{idAdmin=2, password=2, username=a2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Admin{idAdmin=1, password=1, username=a1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT m FROM bg.tu_varna.sit.inventorymanagement.data.entities.Mol m 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Mol'
       |     \-[ALIAS] Node: 'm'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'm'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Mol (m) -> mol0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : m -> mol0_.id_mol
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} mol0_.id_mol ) ( FromClause{level=1} mols mol0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Mol): [mols]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
    |  | originalText: m
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [mols mol0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (mols)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'mol0_.id_mol as id_mol1_5_' {alias=m, className=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, tableAlias=mol0_}
    |  \-[SQL_TOKEN] SqlFragment: 'mol0_.email as email2_5_, mol0_.mol_name as mol_name3_5_, mol0_.password as password4_5_, mol0_.tel_num as tel_num5_5_, mol0_.username as username6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[mol0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'mols mol0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=mols,tableAlias=mol0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Mol}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT m FROM bg.tu_varna.sit.inventorymanagement.data.entities.Mol m 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select mol0_.id_mol as id_mol1_5_, mol0_.email as email2_5_, mol0_.mol_name as mol_name3_5_, mol0_.password as password4_5_, mol0_.tel_num as tel_num5_5_, mol0_.username as username6_5_ from mols mol0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        mol0_.id_mol as id_mol1_5_,
        mol0_.email as email2_5_,
        mol0_.mol_name as mol_name3_5_,
        mol0_.password as password4_5_,
        mol0_.tel_num as tel_num5_5_,
        mol0_.username as username6_5_ 
    from
        mols mol0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = ivo@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Ivelin Belinov
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 321
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0886634213
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = i2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.MolRepository  - Successfully got  all Mols!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=321, telNum=0886634213, idMol=2, molName=Ivelin Belinov, email=ivo@mail.bg, products=<uninitialized>, username=i2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[JavaFX Application Thread] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version [WORKING]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4a598e8b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@4a598e8b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4a598e8b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75f7c180
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@551ced59
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ddb34f5
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@15065241
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@15065241
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15065241
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@11dc9c0a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@11dc9c0a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11dc9c0a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@5c2c7a0f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@5c2c7a0f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5c2c7a0f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@70f05b0c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@70f05b0c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70f05b0c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@4dce8376
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@4dce8376
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4dce8376
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3c0d3677
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3c0d3677
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c0d3677
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7ed4b9d5
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7ed4b9d5
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ed4b9d5
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58ccf64
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58ccf64
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@707867a0
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@707867a0
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@2656604b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@2656604b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@103788da
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5acb1fbe
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7065190d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7065190d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@6e70684c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6e70684c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@6c934aae
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6c934aae
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@43033db4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@43033db4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bfd96b4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bfd96b4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6b3d63e8
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6b3d63e8
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d435af6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4d435af6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@120818fd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@120818fd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210b7b71
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@210b7b71
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@7de135f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7de135f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@3f1b41bf
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3f1b41bf
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@410bb061
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@410bb061
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@410bb061
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@402d2cbe
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@6436c97
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6436c97
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6436c97
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3dda3324
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@477c8df7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@633f39ab
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@633f39ab
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@36c8e8e1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36c8e8e1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7bf5cadb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7bf5cadb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@2d7e8e23
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d7e8e23
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b88ad18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b88ad18
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3fd52be6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@decedc6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@decedc6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@decedc6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3819d221
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3819d221
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3819d221
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@403841d7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@34e4a5bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@39dffe4b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@39dffe4b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@39dffe4b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@409974bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@409974bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@409974bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@575002a6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@6d0b8b50
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@2a6bfaec
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a6bfaec
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59f904a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@a68931c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@a68931c
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@428bfb85
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@428bfb85
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70359ae6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35929dca
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@4d1e47e1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@6e26ca19
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e26ca19
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3334da1e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e67aa36
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5dfd01
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e627f6f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2b93b697
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@78f69fc9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@172cd023
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a984cae
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/inventory]
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=root1, user=root}
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 3 (min=1)
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.27 (Revision: e920b979015ae7117d60d72bcc8f077a839cd791)
      major : 8
      minor : 0
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in more than one case
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c4d808e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62c61b57]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Admin on table admins
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=id_admin, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Admin] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idAdmin with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:idAdmin]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_admin)]), idAdmin, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=password, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:password]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=username, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:username]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Condition on table conditions
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=id_condition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Condition] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCondition with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Condition:idCondition]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_condition)]), idCondition, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=prod_condition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodCondition with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Condition:prodCondition]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Customer on table customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=id_customer, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Customer] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCustomer with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:idCustomer]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_customer)]), idCustomer, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=cus_name, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property cusName with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:cusName]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=customers, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=customers_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='customers_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=email, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:email]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=tel_num, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property telNum with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:telNum]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard on table customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=id_customer_board, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCustomerBoard with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:idCustomerBoard]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_customer_board)]), idCustomerBoard, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_customer', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=byCustomer, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_inventory_number', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=byInventoryNumber, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=registered_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property registeredDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:registeredDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=return_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property returnDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:returnDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Mol on table mols
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=id_mol, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Mol] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idMol with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:idMol]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_mol)]), idMol, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=email, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:email]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=mol_name, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property molName with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:molName]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=password, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:password]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=tel_num, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property telNum with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:telNum]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=username, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:username]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Product on table products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=id_inventory_number, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Product] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idInventoryNumber with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:idInventoryNumber]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_inventory_number)]), idInventoryNumber, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_amortization', referencedColumn='id_amortization', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byAmortization, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_condition', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byCondition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_mol', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byMol, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=description, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property description with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:description]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=discard_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property discardDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:discardDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=exploatation_start, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property exploatationStart with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:exploatationStart]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=is_discarded, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property isDiscarded with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:isDiscarded]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=prod_status, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodStatus with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:prodStatus]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_type, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodType with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:prodType]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_value, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productValue with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:productValue]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Amortization on table amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=id_amortization, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idAmortization with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization:idAmortization]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_amortization)]), idAmortization, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=amort_deg, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amortDeg with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization:amortDeg]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byAmortization'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=product, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_admin] to be non-null as it is part of the primary key for table [admins]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_condition] to be non-null as it is part of the primary key for table [conditions]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_customer] to be non-null as it is part of the primary key for table [customers]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_customer_board] to be non-null as it is part of the primary key for table [customer_boards]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_mol] to be non-null as it is part of the primary key for table [mols]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_inventory_number] to be non-null as it is part of the primary key for table [products]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_amortization] to be non-null as it is part of the primary key for table [amortization]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products -> products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.Product.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_condition, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers -> customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_customer, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products -> products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.Product.byMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_mol, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products -> customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_inventory_number, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Processing association property references
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Processing association property references
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: 2
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=15, javafx.runtime.version=15.0.1+1, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-controls\15.0.1\javafx-controls-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-graphics\15.0.1\javafx-graphics-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-base\15.0.1\javafx-base-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-fxml\15.0.1\javafx-fxml-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-web\15.0.1\javafx-web-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-media\15.0.1\javafx-media-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\GRIGS\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\GRIGS\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\GRIGS\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\GRIGS\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\GRIGS\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\GRIGS\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\GRIGS\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\GRIGS\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\GRIGS\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\GRIGS\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\GRIGS\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\GRIGS\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\GRIGS\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\GRIGS\.m2\repository\mysql\mysql-connector-java\8.0.27\mysql-connector-java-8.0.27.jar;C:\Users\GRIGS\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Sofia, user.country.format=BG, java.vm.specification.version=15, os.name=Windows 10, javafx.version=15.0.1, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.2\bin, sun.java.command=bg.tu_varna.sit.inventorymanagement/bg.tu_varna.sit.inventorymanagement.application.HelloApplication, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\GRIGS, user.language=en, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-fxml\15.0.1\javafx-fxml-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-controls\15.0.1\javafx-controls-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-web\15.0.1\javafx-web-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\GRIGS\.m2\repository\net\synedra\validatorfx\0.1.13\validatorfx-0.1.13.jar;C:\Users\GRIGS\.m2\repository\org\controlsfx\controlsfx\11.1.0\controlsfx-11.1.0.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.2.0\ikonli-javafx-12.2.0.jar;C:\Users\GRIGS\.m2\repository\com\dlsc\formsfx\formsfx-core\11.3.2\formsfx-core-11.3.2.jar;C:\Users\GRIGS\Documents\GitHub\OOP2_Project\InventoryManagement\target\classes;C:\Users\GRIGS\.m2\repository\org\hibernate\hibernate-core\5.6.1.Final\hibernate-core-5.6.1.Final.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.4.0\bootstrapfx-core-0.4.0.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-graphics\15.0.1\javafx-graphics-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-media\15.0.1\javafx-media-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-base\15.0.1\javafx-base-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\eu\hansolo\tilesfx\11.48\tilesfx-11.48.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\ikonli\ikonli-core\12.2.0\ikonli-core-12.2.0.jar;C:\Users\GRIGS\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.version.date=2021-01-19, java.home=C:\Program Files\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=bg.tu_varna.sit.inventorymanagement.application.HelloApplication, jdk.module.main=bg.tu_varna.sit.inventorymanagement, hibernate.hbm2ddl.auto=update, user.script=, connection.password=root1, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=GRIGS, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/inventory, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\GRIGS\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\GRIGS\Documents\GitHub\OOP2_Project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=bg, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5cb5c650, java.library.path=C:\Program Files\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Users\GRIGS\AppData\Local\Microsoft\WindowsApps;C:\Users\GRIGS\.dotnet\tools;C:\Users\GRIGS\AppData\Local\GitHubDesktop\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://localhost:3306/inventory, java.class.version=59.0}
[JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c4d808e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@20140f2e]
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Product] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Mol] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Condition] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Customer] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Admin] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update products set id_condition=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update products set  where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update products set id_condition=null where id_condition=? and id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update products set id_condition=null where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update customer_boards set id_customer=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update customer_boards set  where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update customer_boards set id_customer=null where id_customer=? and id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update customer_boards set id_customer=null where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update products set id_mol=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update products set  where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update products set id_mol=null where id_mol=? and id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update products set id_mol=null where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update customer_boards set id_inventory_number=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update customer_boards set  where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update customer_boards set id_inventory_number=null where id_inventory_number=? and id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update customer_boards set id_inventory_number=null where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_amortization from amortization where id_amortization =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select amortizati_.id_amortization, amortizati_.amort_deg as amort_de2_1_ from amortization amortizati_ where amortizati_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into amortization (amort_deg, id_amortization) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update amortization set amort_deg=? where id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from amortization where id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into amortization (amort_deg) values (?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c4cd790]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ff3f655]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : product.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cf796be]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41752647]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : product.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fd453b6]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463062aa]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.byCondition)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.byMol)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
          - SQL table alias mapping - amortizati0_
          - alias suffix - 0_
          - suffixed key columns - {id_amort1_1_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol2_
                      - alias suffix - 2_
                      - suffixed key columns - {id_mol1_5_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Amortization [NONE]: select amortizati0_.id_amortization as id_amort1_1_0_, amortizati0_.amort_deg as amort_de2_1_0_, product1_.id_inventory_number as id_inven1_6_1_, product1_.id_amortization as id_amort9_6_1_, product1_.id_condition as id_cond10_6_1_, product1_.id_mol as id_mol11_6_1_, product1_.description as descript2_6_1_, product1_.discard_date as discard_3_6_1_, product1_.exploatation_start as exploata4_6_1_, product1_.is_discarded as is_disca5_6_1_, product1_.prod_status as prod_sta6_6_1_, product1_.product_type as product_7_6_1_, product1_.product_value as product_8_6_1_, mol2_.id_mol as id_mol1_5_2_, mol2_.email as email2_5_2_, mol2_.mol_name as mol_name3_5_2_, mol2_.password as password4_5_2_, mol2_.tel_num as tel_num5_5_2_, mol2_.username as username6_5_2_ from amortization amortizati0_ left outer join products product1_ on amortizati0_.id_amortization=product1_.id_amortization left outer join mols mol2_ on product1_.id_mol=mol2_.id_mol where amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_inventory_number from products where id_inventory_number =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select product_.id_inventory_number, product_.id_amortization as id_amort9_6_, product_.id_condition as id_cond10_6_, product_.id_mol as id_mol11_6_, product_.description as descript2_6_, product_.discard_date as discard_3_6_, product_.exploatation_start as exploata4_6_, product_.is_discarded as is_disca5_6_, product_.prod_status as prod_sta6_6_, product_.product_type as product_7_6_, product_.product_value as product_8_6_ from products product_ where product_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into products (id_amortization, id_condition, id_mol, description, discard_date, exploatation_start, is_discarded, prod_status, product_type, product_value, id_inventory_number) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update products set id_amortization=?, id_condition=?, id_mol=?, description=?, discard_date=?, exploatation_start=?, is_discarded=?, prod_status=?, product_type=?, product_value=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from products where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into products (id_amortization, id_condition, id_mol, description, discard_date, exploatation_start, is_discarded, prod_status, product_type, product_value) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44091bfb]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a398c82]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f27121]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cadc5af]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d3db876]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56fda789]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byAmortization)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byCondition)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byMol)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id_inven1_6_0_}
          - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                - SQL table alias mapping - amortizati1_
                - alias suffix - 1_
                - suffixed key columns - {id_amort1_1_1_}
          - JOIN (JoinDefinedByMetadata(byMol)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                - SQL table alias mapping - mol2_
                - alias suffix - 2_
                - suffixed key columns - {id_mol1_5_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Product [NONE]: select product0_.id_inventory_number as id_inven1_6_0_, product0_.id_amortization as id_amort9_6_0_, product0_.id_condition as id_cond10_6_0_, product0_.id_mol as id_mol11_6_0_, product0_.description as descript2_6_0_, product0_.discard_date as discard_3_6_0_, product0_.exploatation_start as exploata4_6_0_, product0_.is_discarded as is_disca5_6_0_, product0_.prod_status as prod_sta6_6_0_, product0_.product_type as product_7_6_0_, product0_.product_value as product_8_6_0_, amortizati1_.id_amortization as id_amort1_1_1_, amortizati1_.amort_deg as amort_de2_1_1_, mol2_.id_mol as id_mol1_5_2_, mol2_.email as email2_5_2_, mol2_.mol_name as mol_name3_5_2_, mol2_.password as password4_5_2_, mol2_.tel_num as tel_num5_5_2_, mol2_.username as username6_5_2_ from products product0_ left outer join amortization amortizati1_ on product0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on product0_.id_mol=mol2_.id_mol where product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Product [NONE]: select product0_.id_inventory_number as id_inven1_6_2_, product0_.id_amortization as id_amort9_6_2_, product0_.id_condition as id_cond10_6_2_, product0_.id_mol as id_mol11_6_2_, product0_.description as descript2_6_2_, product0_.discard_date as discard_3_6_2_, product0_.exploatation_start as exploata4_6_2_, product0_.is_discarded as is_disca5_6_2_, product0_.prod_status as prod_sta6_6_2_, product0_.product_type as product_7_6_2_, product0_.product_value as product_8_6_2_, amortizati1_.id_amortization as id_amort1_1_0_, amortizati1_.amort_deg as amort_de2_1_0_, mol2_.id_mol as id_mol1_5_1_, mol2_.email as email2_5_1_, mol2_.mol_name as mol_name3_5_1_, mol2_.password as password4_5_1_, mol2_.tel_num as tel_num5_5_1_, mol2_.username as username6_5_1_ from products product0_ left outer join amortization amortizati1_ on product0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on product0_.id_mol=mol2_.id_mol where product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_mol from mols where id_mol =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select mol_.id_mol, mol_.email as email2_5_, mol_.mol_name as mol_name3_5_, mol_.password as password4_5_, mol_.tel_num as tel_num5_5_, mol_.username as username6_5_ from mols mol_ where mol_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into mols (email, mol_name, password, tel_num, username, id_mol) values (?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update mols set email=?, mol_name=?, password=?, tel_num=?, username=? where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from mols where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into mols (email, mol_name, password, tel_num, username) values (?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76645987]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@465ee14d]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd118f8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
          - SQL table alias mapping - mol0_
          - alias suffix - 0_
          - suffixed key columns - {id_mol1_5_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Mol [NONE]: select mol0_.id_mol as id_mol1_5_0_, mol0_.email as email2_5_0_, mol0_.mol_name as mol_name3_5_0_, mol0_.password as password4_5_0_, mol0_.tel_num as tel_num5_5_0_, mol0_.username as username6_5_0_ from mols mol0_ where mol0_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_customer_board from customer_boards where id_customer_board =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select customerbo_.id_customer_board, customerbo_.id_customer as id_custo4_3_, customerbo_.id_inventory_number as id_inven5_3_, customerbo_.registered_date as register2_3_, customerbo_.return_date as return_d3_3_ from customer_boards customerbo_ where customerbo_.id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into customer_boards (id_customer, id_inventory_number, registered_date, return_date, id_customer_board) values (?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update customer_boards set id_customer=?, id_inventory_number=?, registered_date=?, return_date=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from customer_boards where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into customer_boards (id_customer, id_inventory_number, registered_date, return_date) values (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b2dd0e4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ead439]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65e450ff]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a9647d4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35c64149]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7d3834]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byCustomer)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byCondition)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byMol)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
          - SQL table alias mapping - customerbo0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo1_3_0_}
          - JOIN (JoinDefinedByMetadata(byCustomer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_4_1_}
          - JOIN (JoinDefinedByMetadata(byInventoryNumber)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {id_inven1_6_2_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati3_
                      - alias suffix - 3_
                      - suffixed key columns - {id_amort1_1_3_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:2> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol4_
                      - alias suffix - 4_
                      - suffixed key columns - {id_mol1_5_4_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard [NONE]: select customerbo0_.id_customer_board as id_custo1_3_0_, customerbo0_.id_customer as id_custo4_3_0_, customerbo0_.id_inventory_number as id_inven5_3_0_, customerbo0_.registered_date as register2_3_0_, customerbo0_.return_date as return_d3_3_0_, customer1_.id_customer as id_custo1_4_1_, customer1_.cus_name as cus_name2_4_1_, customer1_.email as email3_4_1_, customer1_.tel_num as tel_num4_4_1_, product2_.id_inventory_number as id_inven1_6_2_, product2_.id_amortization as id_amort9_6_2_, product2_.id_condition as id_cond10_6_2_, product2_.id_mol as id_mol11_6_2_, product2_.description as descript2_6_2_, product2_.discard_date as discard_3_6_2_, product2_.exploatation_start as exploata4_6_2_, product2_.is_discarded as is_disca5_6_2_, product2_.prod_status as prod_sta6_6_2_, product2_.product_type as product_7_6_2_, product2_.product_value as product_8_6_2_, amortizati3_.id_amortization as id_amort1_1_3_, amortizati3_.amort_deg as amort_de2_1_3_, mol4_.id_mol as id_mol1_5_4_, mol4_.email as email2_5_4_, mol4_.mol_name as mol_name3_5_4_, mol4_.password as password4_5_4_, mol4_.tel_num as tel_num5_5_4_, mol4_.username as username6_5_4_ from customer_boards customerbo0_ left outer join customers customer1_ on customerbo0_.id_customer=customer1_.id_customer left outer join products product2_ on customerbo0_.id_inventory_number=product2_.id_inventory_number left outer join amortization amortizati3_ on product2_.id_amortization=amortizati3_.id_amortization left outer join mols mol4_ on product2_.id_mol=mol4_.id_mol where customerbo0_.id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_condition from conditions where id_condition =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select condition_.id_condition, condition_.prod_condition as prod_con2_2_ from conditions condition_ where condition_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into conditions (prod_condition, id_condition) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update conditions set prod_condition=? where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from conditions where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into conditions (prod_condition) values (?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3a4d]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@400bcb48]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8d6ab3]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
          - SQL table alias mapping - condition0_
          - alias suffix - 0_
          - suffixed key columns - {id_condi1_2_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Condition [NONE]: select condition0_.id_condition as id_condi1_2_0_, condition0_.prod_condition as prod_con2_2_0_ from conditions condition0_ where condition0_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_customer from customers where id_customer =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select customer_.id_customer, customer_.cus_name as cus_name2_4_, customer_.email as email3_4_, customer_.tel_num as tel_num4_4_ from customers customer_ where customer_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into customers (cus_name, email, tel_num, id_customer) values (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update customers set cus_name=?, email=?, tel_num=? where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from customers where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into customers (cus_name, email, tel_num) values (?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143dc81d]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : customers
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a7ab57a]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c048e74]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : telNum
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo1_4_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Customer [NONE]: select customer0_.id_customer as id_custo1_4_0_, customer0_.cus_name as cus_name2_4_0_, customer0_.email as email3_4_0_, customer0_.tel_num as tel_num4_4_0_ from customers customer0_ where customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_admin from admins where id_admin =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select admin_.id_admin, admin_.password as password2_0_, admin_.username as username3_0_ from admins admin_ where admin_.id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into admins (password, username, id_admin) values (?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update admins set password=?, username=? where id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from admins where id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into admins (password, username) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5603d6c9]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
          - SQL table alias mapping - admin0_
          - alias suffix - 0_
          - suffixed key columns - {id_admin1_0_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Admin [NONE]: select admin0_.id_admin as id_admin1_0_0_, admin0_.password as password2_0_0_, admin0_.username as username3_0_0_ from admins admin0_ where admin0_.id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a236317]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce572fd]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c128e10]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dda72e4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3585c906]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c322eac]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.byMol)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.products.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_cond10_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_inven1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_amort1_1_2_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol2_
                      - alias suffix - 3_
                      - suffixed key columns - {id_mol1_5_3_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products: select products0_.id_condition as id_cond10_6_0_, products0_.id_inventory_number as id_inven1_6_0_, products0_.id_inventory_number as id_inven1_6_1_, products0_.id_amortization as id_amort9_6_1_, products0_.id_condition as id_cond10_6_1_, products0_.id_mol as id_mol11_6_1_, products0_.description as descript2_6_1_, products0_.discard_date as discard_3_6_1_, products0_.exploatation_start as exploata4_6_1_, products0_.is_discarded as is_disca5_6_1_, products0_.prod_status as prod_sta6_6_1_, products0_.product_type as product_7_6_1_, products0_.product_value as product_8_6_1_, amortizati1_.id_amortization as id_amort1_1_2_, amortizati1_.amort_deg as amort_de2_1_2_, mol2_.id_mol as id_mol1_5_3_, mol2_.email as email2_5_3_, mol2_.mol_name as mol_name3_5_3_, mol2_.password as password4_5_3_, mol2_.tel_num as tel_num5_5_3_, mol2_.username as username6_5_3_ from products products0_ left outer join amortization amortizati1_ on products0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on products0_.id_mol=mol2_.id_mol where products0_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18b5a347]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@243315e5]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31774e5]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382414dc]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cca4f17]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d5674fc]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byAmortization)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byCondition)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byMol)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
          - SQL table alias mapping - customers0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_custo1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
                - SQL table alias mapping - customers0_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_3_1_}
                - JOIN (JoinDefinedByMetadata(byInventoryNumber)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                      - SQL table alias mapping - product1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_inven1_6_2_}
                      - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                            - SQL table alias mapping - amortizati2_
                            - alias suffix - 3_
                            - suffixed key columns - {id_amort1_1_3_}
                      - JOIN (JoinDefinedByMetadata(byMol)) : <gen:2> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                            - SQL table alias mapping - mol3_
                            - alias suffix - 4_
                            - suffixed key columns - {id_mol1_5_4_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers: select customers0_.id_customer as id_custo4_3_0_, customers0_.id_customer_board as id_custo1_3_0_, customers0_.id_customer_board as id_custo1_3_1_, customers0_.id_customer as id_custo4_3_1_, customers0_.id_inventory_number as id_inven5_3_1_, customers0_.registered_date as register2_3_1_, customers0_.return_date as return_d3_3_1_, product1_.id_inventory_number as id_inven1_6_2_, product1_.id_amortization as id_amort9_6_2_, product1_.id_condition as id_cond10_6_2_, product1_.id_mol as id_mol11_6_2_, product1_.description as descript2_6_2_, product1_.discard_date as discard_3_6_2_, product1_.exploatation_start as exploata4_6_2_, product1_.is_discarded as is_disca5_6_2_, product1_.prod_status as prod_sta6_6_2_, product1_.product_type as product_7_6_2_, product1_.product_value as product_8_6_2_, amortizati2_.id_amortization as id_amort1_1_3_, amortizati2_.amort_deg as amort_de2_1_3_, mol3_.id_mol as id_mol1_5_4_, mol3_.email as email2_5_4_, mol3_.mol_name as mol_name3_5_4_, mol3_.password as password4_5_4_, mol3_.tel_num as tel_num5_5_4_, mol3_.username as username6_5_4_ from customer_boards customers0_ left outer join products product1_ on customers0_.id_inventory_number=product1_.id_inventory_number left outer join amortization amortizati2_ on product1_.id_amortization=amortizati2_.id_amortization left outer join mols mol3_ on product1_.id_mol=mol3_.id_mol where customers0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@348625ee]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3a769e]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742b9229]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61b09b30]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bf8e554]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a80d8]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.byCondition)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.products.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_mol11_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_inven1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_amort1_1_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products: select products0_.id_mol as id_mol11_6_0_, products0_.id_inventory_number as id_inven1_6_0_, products0_.id_inventory_number as id_inven1_6_1_, products0_.id_amortization as id_amort9_6_1_, products0_.id_condition as id_cond10_6_1_, products0_.id_mol as id_mol11_6_1_, products0_.description as descript2_6_1_, products0_.discard_date as discard_3_6_1_, products0_.exploatation_start as exploata4_6_1_, products0_.is_discarded as is_disca5_6_1_, products0_.prod_status as prod_sta6_6_1_, products0_.product_type as product_7_6_1_, products0_.product_value as product_8_6_1_, amortizati1_.id_amortization as id_amort1_1_2_, amortizati1_.amort_deg as amort_de2_1_2_ from products products0_ left outer join amortization amortizati1_ on products0_.id_amortization=amortizati1_.id_amortization where products0_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a7add35]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f76a051]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84cf491]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products].<elements>.byCustomer)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_inven5_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_custo1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_3_1_}
                - JOIN (JoinDefinedByMetadata(byCustomer)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
                      - SQL table alias mapping - customer1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_custo1_4_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Product.products: select products0_.id_inventory_number as id_inven5_3_0_, products0_.id_customer_board as id_custo1_3_0_, products0_.id_customer_board as id_custo1_3_1_, products0_.id_customer as id_custo4_3_1_, products0_.id_inventory_number as id_inven5_3_1_, products0_.registered_date as register2_3_1_, products0_.return_date as return_d3_3_1_, customer1_.id_customer as id_custo1_4_2_, customer1_.cus_name as cus_name2_4_2_, customer1_.email as email3_4_2_, customer1_.tel_num as tel_num4_4_2_ from customer_boards products0_ left outer join customers customer1_ on products0_.id_customer=customer1_.id_customer where products0_.id_inventory_number=?
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@164b020b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : admins
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : amortization
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : conditions
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : customers
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : mols
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : products
[JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d984ec5
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 176a1feb-8fc0-4783-9fdd-30b07143395f (<unnamed>)
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@771f2854
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT a FROM bg.tu_varna.sit.inventorymanagement.data.entities.Admin a 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Admin'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Admin (a) -> admin0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : a -> admin0_.id_admin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} admin0_.id_admin ) ( FromClause{level=1} admins admin0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Admin): [admins]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    |  | originalText: a
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [admins admin0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (admins)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'admin0_.id_admin as id_admin1_0_' {alias=a, className=bg.tu_varna.sit.inventorymanagement.data.entities.Admin, tableAlias=admin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'admin0_.password as password2_0_, admin0_.username as username3_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[admin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'admins admin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=admins,tableAlias=admin0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Admin}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT a FROM bg.tu_varna.sit.inventorymanagement.data.entities.Admin a 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select admin0_.id_admin as id_admin1_0_, admin0_.password as password2_0_, admin0_.username as username3_0_ from admins admin0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        admin0_.id_admin as id_admin1_0_,
        admin0_.password as password2_0_,
        admin0_.username as username3_0_ 
    from
        admins admin0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = a1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = a2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.AdminRepository  - Successfully got all admins
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Admin{idAdmin=2, password=2, username=a2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Admin{idAdmin=1, password=1, username=a1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[JavaFX Application Thread] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[JavaFX Application Thread] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[JavaFX Application Thread] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version [WORKING]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[JavaFX Application Thread] DEBUG org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver  - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[JavaFX Application Thread] DEBUG org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor  - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[JavaFX Application Thread] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[JavaFX Application Thread] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[JavaFX Application Thread] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@f1f666a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@f1f666a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f1f666a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@546aa666
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37b28e79
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@367ef27a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@41fea544
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@41fea544
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41fea544
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@7a7faee1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@7a7faee1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a7faee1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2cdcf5ab
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2cdcf5ab
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2cdcf5ab
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@68f1211a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@68f1211a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68f1211a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5b92dc2f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@5b92dc2f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b92dc2f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@276595d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@276595d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@276595d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7de915a9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@7de915a9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7de915a9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@42523d54
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@42523d54
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@103788da
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@103788da
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@3ea6a9a7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@3ea6a9a7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7065190d
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5105bffa
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@190a5848
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@190a5848
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@5191437a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5191437a
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@85ad9cf
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@85ad9cf
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3776e95e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3776e95e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@16b6a717
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@16b6a717
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@52adb573
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@52adb573
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46e15e61
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@46e15e61
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6887634
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6887634
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7de135f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7de135f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@6d034619
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6d034619
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@5cb917f0
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cb917f0
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f074a71
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f074a71
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f074a71
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69e01829
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@410b4a48
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@410b4a48
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@410b4a48
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19d59db6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@49e01f84
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2d9a38c2
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d9a38c2
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@50dbb64f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50dbb64f
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a2c622b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a2c622b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3fd52be6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3fd52be6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1acbf3
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1acbf3
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2799c280
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@441abff6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@441abff6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@441abff6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@34e4a5bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@34e4a5bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@34e4a5bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@39dffe4b
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@4d12a959
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@575002a6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@575002a6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@575002a6
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45b3eff3
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45b3eff3
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45b3eff3
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@45155144
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@451b0194
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@15c3d543
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15c3d543
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@18a36df
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@426b0fc1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@426b0fc1
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@e4b25bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e4b25bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2726daf4
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cfed5cc
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@43f72ce7
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@3a984cae
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a984cae
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@491406b9
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ec947bd
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@234e98eb
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1ce80c02
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75a0f0e8
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3110b54e
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66ceea47
[JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a9a6280
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[JavaFX Application Thread] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[JavaFX Application Thread] WARN  org.hibernate.orm.connections.pooling  - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/inventory]
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001001: Connection properties: {password=root1, user=root}
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.pooling  - HHH10001003: Autocommit mode: false
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Initializing Connection pool with 1 Connections
[JavaFX Application Thread] INFO  org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - HHH000115: Hibernate connection pool size: 3 (min=1)
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.27 (Revision: e920b979015ae7117d60d72bcc8f077a839cd791)
      major : 8
      minor : 0
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.2
[JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in more than one case
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[JavaFX Application Thread] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@349246d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@37336fe2]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Admin on table admins
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=id_admin, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Admin] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idAdmin with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:idAdmin]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_admin)]), idAdmin, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=password, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:password]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admins), mappingColumn=username, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Admin:username]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Condition on table conditions
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=id_condition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Condition] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCondition with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Condition:idCondition]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_condition)]), idCondition, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=prod_condition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodCondition with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Condition:prodCondition]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(conditions), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCondition'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Customer on table customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=id_customer, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Customer] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCustomer with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:idCustomer]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_customer)]), idCustomer, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=cus_name, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property cusName with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:cusName]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=customers, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=customers_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='customers_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byCustomer'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=email, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:email]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customers), mappingColumn=tel_num, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property telNum with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Customer:telNum]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard on table customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=id_customer_board, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idCustomerBoard with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:idCustomerBoard]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_customer_board)]), idCustomerBoard, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_customer', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=byCustomer, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_inventory_number', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=byInventoryNumber, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=registered_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property registeredDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:registeredDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_boards), mappingColumn=return_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property returnDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard:returnDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Mol on table mols
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=id_mol, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Mol] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idMol with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:idMol]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_mol)]), idMol, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=email, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property email with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:email]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=mol_name, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property molName with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:molName]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=password, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:password]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byMol'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=tel_num, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property telNum with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:telNum]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(mols), mappingColumn=username, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Mol:username]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Product on table products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=id_inventory_number, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Product] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idInventoryNumber with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:idInventoryNumber]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_inventory_number)]), idInventoryNumber, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_amortization', referencedColumn='id_amortization', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byAmortization, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_condition', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byCondition, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='id_mol', referencedColumn='', mappedBy=''}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=byMol, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property byMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=description, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property description with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:description]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=discard_date, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property discardDate with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:discardDate]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=exploatation_start, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property exploatationStart with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:exploatationStart]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=is_discarded, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property isDiscarded with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:isDiscarded]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=prod_status, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodStatus with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:prodStatus]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_type, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property prodType with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:prodType]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=product_value, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property productValue with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Product:productValue]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=products, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=null, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=element, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(products), mappingColumn=products_KEY, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='products_KEY', referencedColumn='null', mappedBy='null'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byInventoryNumber'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity bg.tu_varna.sit.inventorymanagement.data.entities.Amortization on table amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=id_amortization, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property idAmortization with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization:idAmortization]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id_amortization)]), idAmortization, identity, , ...)
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=amort_deg, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amortDeg with lazy=false
[JavaFX Application Thread] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization:amortDeg]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='byAmortization'}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(amortization), mappingColumn=product, insertable=true, updatable=true, unique=false}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idAdmin
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for cusName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idCustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for returnDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for email
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for molName
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for telNum
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for description
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for discardDate
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for prodType
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for productValue
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for idAmortization
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_admin] to be non-null as it is part of the primary key for table [admins]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_condition] to be non-null as it is part of the primary key for table [conditions]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_customer] to be non-null as it is part of the primary key for table [customers]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_customer_board] to be non-null as it is part of the primary key for table [customer_boards]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_mol] to be non-null as it is part of the primary key for table [mols]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_inventory_number] to be non-null as it is part of the primary key for table [products]
[JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id_amortization] to be non-null as it is part of the primary key for table [amortization]
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products -> products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.Product.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_condition, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers -> customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_customer, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products -> products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.Product.byMol
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_mol, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products through a foreign key
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products -> customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: id_inventory_number, one-to-many: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Processing association property references
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Processing association property references
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: 2
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Connection release mode: AFTER_TRANSACTION
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQL8Dialect, java.specification.version=15, javafx.runtime.version=15.0.1+1, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-controls\15.0.1\javafx-controls-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-graphics\15.0.1\javafx-graphics-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-base\15.0.1\javafx-base-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-fxml\15.0.1\javafx-fxml-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-web\15.0.1\javafx-web-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-media\15.0.1\javafx-media-15.0.1.jar;C:\Users\GRIGS\.m2\repository\org\jboss\logging\jboss-logging\3.4.2.Final\jboss-logging-3.4.2.Final.jar;C:\Users\GRIGS\.m2\repository\net\bytebuddy\byte-buddy\1.11.20\byte-buddy-1.11.20.jar;C:\Users\GRIGS\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\GRIGS\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\GRIGS\.m2\repository\org\jboss\jandex\2.2.3.Final\jandex-2.2.3.Final.jar;C:\Users\GRIGS\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\GRIGS\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\GRIGS\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\GRIGS\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\GRIGS\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\GRIGS\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\GRIGS\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\GRIGS\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\GRIGS\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\GRIGS\.m2\repository\mysql\mysql-connector-java\8.0.27\mysql-connector-java-8.0.27.jar;C:\Users\GRIGS\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Sofia, user.country.format=BG, java.vm.specification.version=15, os.name=Windows 10, javafx.version=15.0.1, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-15.0.2\bin, sun.java.command=bg.tu_varna.sit.inventorymanagement/bg.tu_varna.sit.inventorymanagement.application.HelloApplication, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\GRIGS, user.language=en, java.specification.vendor=Oracle Corporation, jdk.module.path=C:\Users\GRIGS\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\GRIGS\.m2\repository\com\dlsc\formsfx\formsfx-core\11.3.2\formsfx-core-11.3.2.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-media\15.0.1\javafx-media-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-controls\15.0.1\javafx-controls-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\ikonli\ikonli-core\12.2.0\ikonli-core-12.2.0.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-graphics\15.0.1\javafx-graphics-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-fxml\15.0.1\javafx-fxml-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\ikonli\ikonli-javafx\12.2.0\ikonli-javafx-12.2.0.jar;C:\Users\GRIGS\.m2\repository\org\kordamp\bootstrapfx\bootstrapfx-core\0.4.0\bootstrapfx-core-0.4.0.jar;C:\Users\GRIGS\.m2\repository\eu\hansolo\tilesfx\11.48\tilesfx-11.48.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-base\15.0.1\javafx-base-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\org\hibernate\hibernate-core\5.6.1.Final\hibernate-core-5.6.1.Final.jar;C:\Users\GRIGS\.m2\repository\org\openjfx\javafx-web\15.0.1\javafx-web-15.0.1-win.jar;C:\Users\GRIGS\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\GRIGS\.m2\repository\org\controlsfx\controlsfx\11.1.0\controlsfx-11.1.0.jar;C:\Users\GRIGS\Documents\GitHub\OOP2_Project\InventoryManagement\target\classes;C:\Users\GRIGS\.m2\repository\net\synedra\validatorfx\0.1.13\validatorfx-0.1.13.jar, java.version.date=2021-01-19, java.home=C:\Program Files\Java\jdk-15.0.2, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, jdk.module.main.class=bg.tu_varna.sit.inventorymanagement.application.HelloApplication, jdk.module.main=bg.tu_varna.sit.inventorymanagement, hibernate.hbm2ddl.auto=update, user.script=, connection.password=root1, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.2+7-27, user.name=GRIGS, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/inventory, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\GRIGS\AppData\Local\Temp\, java.version=15.0.2, user.dir=C:\Users\GRIGS\Documents\GitHub\OOP2_Project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=bg, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3583d10a, java.library.path=C:\Program Files\Java\jdk-15.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\WINDOWS\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Git\cmd;C:\Program Files\PuTTY\;C:\Users\GRIGS\AppData\Local\Microsoft\WindowsApps;C:\Users\GRIGS\.dotnet\tools;C:\Users\GRIGS\AppData\Local\GitHubDesktop\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=15.0.2+7-27, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://localhost:3306/inventory, java.class.version=59.0}
[JavaFX Application Thread] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[JavaFX Application Thread] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@349246d7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4ed0397b]
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#product` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Product] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byAmortization` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.Product#byMol` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Mol] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byCustomer` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.orm.bytecode.interceptor  - To-one property `bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#byInventoryNumber` was mapped with LAZY + NO_PROXY but the class was not enhanced
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Condition] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Customer] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [bg.tu_varna.sit.inventorymanagement.data.entities.Admin] is safe
[JavaFX Application Thread] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update products set id_condition=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update products set  where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update products set id_condition=null where id_condition=? and id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update products set id_condition=null where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update customer_boards set id_customer=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update customer_boards set  where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update customer_boards set id_customer=null where id_customer=? and id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update customer_boards set id_customer=null where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update products set id_mol=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update products set  where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update products set id_mol=null where id_mol=? and id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update products set id_mol=null where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: bg.tu_varna.sit.inventorymanagement.data.entities.Product.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update customer_boards set id_inventory_number=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update customer_boards set  where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update customer_boards set id_inventory_number=null where id_inventory_number=? and id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update customer_boards set id_inventory_number=null where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Amortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_amortization from amortization where id_amortization =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select amortizati_.id_amortization, amortizati_.amort_deg as amort_de2_1_ from amortization amortizati_ where amortizati_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into amortization (amort_deg, id_amortization) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update amortization set amort_deg=? where id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from amortization where id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into amortization (amort_deg) values (?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af1bffa]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54248ed8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : product.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3212d051]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ff67c46]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : product.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : product.products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78ff9dea]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fc35ad]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.byCondition)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.byMol)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization.product.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
          - SQL table alias mapping - amortizati0_
          - alias suffix - 0_
          - suffixed key columns - {id_amort1_1_0_}
          - JOIN (JoinDefinedByMetadata(product)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - product1_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol2_
                      - alias suffix - 2_
                      - suffixed key columns - {id_mol1_5_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Amortization [NONE]: select amortizati0_.id_amortization as id_amort1_1_0_, amortizati0_.amort_deg as amort_de2_1_0_, product1_.id_inventory_number as id_inven1_6_1_, product1_.id_amortization as id_amort9_6_1_, product1_.id_condition as id_cond10_6_1_, product1_.id_mol as id_mol11_6_1_, product1_.description as descript2_6_1_, product1_.discard_date as discard_3_6_1_, product1_.exploatation_start as exploata4_6_1_, product1_.is_discarded as is_disca5_6_1_, product1_.prod_status as prod_sta6_6_1_, product1_.product_type as product_7_6_1_, product1_.product_value as product_8_6_1_, mol2_.id_mol as id_mol1_5_2_, mol2_.email as email2_5_2_, mol2_.mol_name as mol_name3_5_2_, mol2_.password as password4_5_2_, mol2_.tel_num as tel_num5_5_2_, mol2_.username as username6_5_2_ from amortization amortizati0_ left outer join products product1_ on amortizati0_.id_amortization=product1_.id_amortization left outer join mols mol2_ on product1_.id_mol=mol2_.id_mol where amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Product
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_inventory_number from products where id_inventory_number =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select product_.id_inventory_number, product_.id_amortization as id_amort9_6_, product_.id_condition as id_cond10_6_, product_.id_mol as id_mol11_6_, product_.description as descript2_6_, product_.discard_date as discard_3_6_, product_.exploatation_start as exploata4_6_, product_.is_discarded as is_disca5_6_, product_.prod_status as prod_sta6_6_, product_.product_type as product_7_6_, product_.product_value as product_8_6_ from products product_ where product_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into products (id_amortization, id_condition, id_mol, description, discard_date, exploatation_start, is_discarded, prod_status, product_type, product_value, id_inventory_number) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update products set id_amortization=?, id_condition=?, id_mol=?, description=?, discard_date=?, exploatation_start=?, is_discarded=?, prod_status=?, product_type=?, product_value=? where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from products where id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into products (id_amortization, id_condition, id_mol, description, discard_date, exploatation_start, is_discarded, prod_status, product_type, product_value) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e841b77]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dab0f8a]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a1f287c]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e035dc2]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@394c5664]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a63c5f9]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byAmortization)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byCondition)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.byMol)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id_inven1_6_0_}
          - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                - SQL table alias mapping - amortizati1_
                - alias suffix - 1_
                - suffixed key columns - {id_amort1_1_1_}
          - JOIN (JoinDefinedByMetadata(byMol)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                - SQL table alias mapping - mol2_
                - alias suffix - 2_
                - suffixed key columns - {id_mol1_5_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Product [NONE]: select product0_.id_inventory_number as id_inven1_6_0_, product0_.id_amortization as id_amort9_6_0_, product0_.id_condition as id_cond10_6_0_, product0_.id_mol as id_mol11_6_0_, product0_.description as descript2_6_0_, product0_.discard_date as discard_3_6_0_, product0_.exploatation_start as exploata4_6_0_, product0_.is_discarded as is_disca5_6_0_, product0_.prod_status as prod_sta6_6_0_, product0_.product_type as product_7_6_0_, product0_.product_value as product_8_6_0_, amortizati1_.id_amortization as id_amort1_1_1_, amortizati1_.amort_deg as amort_de2_1_1_, mol2_.id_mol as id_mol1_5_2_, mol2_.email as email2_5_2_, mol2_.mol_name as mol_name3_5_2_, mol2_.password as password4_5_2_, mol2_.tel_num as tel_num5_5_2_, mol2_.username as username6_5_2_ from products product0_ left outer join amortization amortizati1_ on product0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on product0_.id_mol=mol2_.id_mol where product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Product [NONE]: select product0_.id_inventory_number as id_inven1_6_2_, product0_.id_amortization as id_amort9_6_2_, product0_.id_condition as id_cond10_6_2_, product0_.id_mol as id_mol11_6_2_, product0_.description as descript2_6_2_, product0_.discard_date as discard_3_6_2_, product0_.exploatation_start as exploata4_6_2_, product0_.is_discarded as is_disca5_6_2_, product0_.prod_status as prod_sta6_6_2_, product0_.product_type as product_7_6_2_, product0_.product_value as product_8_6_2_, amortizati1_.id_amortization as id_amort1_1_0_, amortizati1_.amort_deg as amort_de2_1_0_, mol2_.id_mol as id_mol1_5_1_, mol2_.email as email2_5_1_, mol2_.mol_name as mol_name3_5_1_, mol2_.password as password4_5_1_, mol2_.tel_num as tel_num5_5_1_, mol2_.username as username6_5_1_ from products product0_ left outer join amortization amortizati1_ on product0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on product0_.id_mol=mol2_.id_mol where product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Mol
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_mol from mols where id_mol =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select mol_.id_mol, mol_.email as email2_5_, mol_.mol_name as mol_name3_5_, mol_.password as password4_5_, mol_.tel_num as tel_num5_5_, mol_.username as username6_5_ from mols mol_ where mol_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into mols (email, mol_name, password, tel_num, username, id_mol) values (?, ?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update mols set email=?, mol_name=?, password=?, tel_num=?, username=? where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from mols where id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into mols (email, mol_name, password, tel_num, username) values (?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72628452]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e7d3834]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@661d72c8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
          - SQL table alias mapping - mol0_
          - alias suffix - 0_
          - suffixed key columns - {id_mol1_5_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Mol [NONE]: select mol0_.id_mol as id_mol1_5_0_, mol0_.email as email2_5_0_, mol0_.mol_name as mol_name3_5_0_, mol0_.password as password4_5_0_, mol0_.tel_num as tel_num5_5_0_, mol0_.username as username6_5_0_ from mols mol0_ where mol0_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_customer_board from customer_boards where id_customer_board =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select customerbo_.id_customer_board, customerbo_.id_customer as id_custo4_3_, customerbo_.id_inventory_number as id_inven5_3_, customerbo_.registered_date as register2_3_, customerbo_.return_date as return_d3_3_ from customer_boards customerbo_ where customerbo_.id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into customer_boards (id_customer, id_inventory_number, registered_date, return_date, id_customer_board) values (?, ?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update customer_boards set id_customer=?, id_inventory_number=?, registered_date=?, return_date=? where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from customer_boards where id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into customer_boards (id_customer, id_inventory_number, registered_date, return_date) values (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3a4d]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400bcb48]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143dc81d]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a7ab57a]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5603d6c9]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69601533]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byCustomer)
          - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:3>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:4>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byCondition)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:5>, path=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard.byInventoryNumber.byMol)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
          - SQL table alias mapping - customerbo0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo1_3_0_}
          - JOIN (JoinDefinedByMetadata(byCustomer)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
                - SQL table alias mapping - customer1_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_4_1_}
          - JOIN (JoinDefinedByMetadata(byInventoryNumber)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - product2_
                - alias suffix - 2_
                - suffixed key columns - {id_inven1_6_2_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:2> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati3_
                      - alias suffix - 3_
                      - suffixed key columns - {id_amort1_1_3_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:2> -> <gen:5>
                   - EntityQuerySpaceImpl(uid=<gen:5>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol4_
                      - alias suffix - 4_
                      - suffixed key columns - {id_mol1_5_4_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard [NONE]: select customerbo0_.id_customer_board as id_custo1_3_0_, customerbo0_.id_customer as id_custo4_3_0_, customerbo0_.id_inventory_number as id_inven5_3_0_, customerbo0_.registered_date as register2_3_0_, customerbo0_.return_date as return_d3_3_0_, customer1_.id_customer as id_custo1_4_1_, customer1_.cus_name as cus_name2_4_1_, customer1_.email as email3_4_1_, customer1_.tel_num as tel_num4_4_1_, product2_.id_inventory_number as id_inven1_6_2_, product2_.id_amortization as id_amort9_6_2_, product2_.id_condition as id_cond10_6_2_, product2_.id_mol as id_mol11_6_2_, product2_.description as descript2_6_2_, product2_.discard_date as discard_3_6_2_, product2_.exploatation_start as exploata4_6_2_, product2_.is_discarded as is_disca5_6_2_, product2_.prod_status as prod_sta6_6_2_, product2_.product_type as product_7_6_2_, product2_.product_value as product_8_6_2_, amortizati3_.id_amortization as id_amort1_1_3_, amortizati3_.amort_deg as amort_de2_1_3_, mol4_.id_mol as id_mol1_5_4_, mol4_.email as email2_5_4_, mol4_.mol_name as mol_name3_5_4_, mol4_.password as password4_5_4_, mol4_.tel_num as tel_num5_5_4_, mol4_.username as username6_5_4_ from customer_boards customerbo0_ left outer join customers customer1_ on customerbo0_.id_customer=customer1_.id_customer left outer join products product2_ on customerbo0_.id_inventory_number=product2_.id_inventory_number left outer join amortization amortizati3_ on product2_.id_amortization=amortizati3_.id_amortization left outer join mols mol4_ on product2_.id_mol=mol4_.id_mol where customerbo0_.id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Condition
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_condition from conditions where id_condition =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select condition_.id_condition, condition_.prod_condition as prod_con2_2_ from conditions condition_ where condition_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into conditions (prod_condition, id_condition) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update conditions set prod_condition=? where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from conditions where id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into conditions (prod_condition) values (?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e91f387]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f4c9571]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c812424]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition)
          - SQL table alias mapping - condition0_
          - alias suffix - 0_
          - suffixed key columns - {id_condi1_2_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Condition [NONE]: select condition0_.id_condition as id_condi1_2_0_, condition0_.prod_condition as prod_con2_2_0_ from conditions condition0_ where condition0_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Customer
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_customer from customers where id_customer =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select customer_.id_customer, customer_.cus_name as cus_name2_4_, customer_.email as email3_4_, customer_.tel_num as tel_num4_4_ from customers customer_ where customer_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into customers (cus_name, email, tel_num, id_customer) values (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update customers set cus_name=?, email=?, tel_num=? where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from customers where id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into customers (cus_name, email, tel_num) values (?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dbdf9f8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : customers
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a5da59]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d07ead]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : telNum
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
          - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers, querySpaceUid=<gen:1>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
             - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:2>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
          - SQL table alias mapping - customer0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo1_4_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Customer [NONE]: select customer0_.id_customer as id_custo1_4_0_, customer0_.cus_name as cus_name2_4_0_, customer0_.email as email3_4_0_, customer0_.tel_num as tel_num4_4_0_ from customers customer0_ where customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: bg.tu_varna.sit.inventorymanagement.data.entities.Admin
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select id_admin from admins where id_admin =?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select admin_.id_admin, admin_.password as password2_0_, admin_.username as username3_0_ from admins admin_ where admin_.id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into admins (password, username, id_admin) values (?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update admins set password=?, username=? where id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from admins where id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Identity insert: insert into admins (password, username) values (?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a02f16]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    - Returns
       - EntityReturnImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin, querySpaceUid=<gen:0>, path=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
          - SQL table alias mapping - admin0_
          - alias suffix - 0_
          - suffixed key columns - {id_admin1_0_0_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity bg.tu_varna.sit.inventorymanagement.data.entities.Admin [NONE]: select admin0_.id_admin as id_admin1_0_0_, admin0_.password as password2_0_0_, admin0_.username as username3_0_0_ from admins admin0_ where admin0_.id_admin=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3255765]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dda72e4]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60edafa6]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dbc7f86]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5326097e]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53eb235f]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.byMol)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products].<elements>.products.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_cond10_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_inven1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_amort1_1_2_}
                - JOIN (JoinDefinedByMetadata(byMol)) : <gen:1> -> <gen:3>
                   - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                      - SQL table alias mapping - mol2_
                      - alias suffix - 3_
                      - suffixed key columns - {id_mol1_5_3_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Condition.products: select products0_.id_condition as id_cond10_6_0_, products0_.id_inventory_number as id_inven1_6_0_, products0_.id_inventory_number as id_inven1_6_1_, products0_.id_amortization as id_amort9_6_1_, products0_.id_condition as id_cond10_6_1_, products0_.id_mol as id_mol11_6_1_, products0_.description as descript2_6_1_, products0_.discard_date as discard_3_6_1_, products0_.exploatation_start as exploata4_6_1_, products0_.is_discarded as is_disca5_6_1_, products0_.prod_status as prod_sta6_6_1_, products0_.product_type as product_7_6_1_, products0_.product_value as product_8_6_1_, amortizati1_.id_amortization as id_amort1_1_2_, amortizati1_.amort_deg as amort_de2_1_2_, mol2_.id_mol as id_mol1_5_3_, mol2_.email as email2_5_3_, mol2_.mol_name as mol_name3_5_3_, mol2_.password as password4_5_3_, mol2_.tel_num as tel_num5_5_3_, mol2_.username as username6_5_3_ from products products0_ left outer join amortization amortizati1_ on products0_.id_amortization=amortizati1_.id_amortization left outer join mols mol2_ on products0_.id_mol=mol2_.id_mol where products0_.id_condition=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@348625ee]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3a769e]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742b9229]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61b09b30]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a80d8]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7add35]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.molName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.password
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.byMol.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.byMol.username
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber.products
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byAmortization)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byCondition)
                - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers].<elements>.byInventoryNumber.byMol)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers)
          - SQL table alias mapping - customers0_
          - alias suffix - 0_
          - suffixed key columns - {id_custo4_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_custo1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
                - SQL table alias mapping - customers0_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_3_1_}
                - JOIN (JoinDefinedByMetadata(byInventoryNumber)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                      - SQL table alias mapping - product1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_inven1_6_2_}
                      - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                            - SQL table alias mapping - amortizati2_
                            - alias suffix - 3_
                            - suffixed key columns - {id_amort1_1_3_}
                      - JOIN (JoinDefinedByMetadata(byMol)) : <gen:2> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
                            - SQL table alias mapping - mol3_
                            - alias suffix - 4_
                            - suffixed key columns - {id_mol1_5_4_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers: select customers0_.id_customer as id_custo4_3_0_, customers0_.id_customer_board as id_custo1_3_0_, customers0_.id_customer_board as id_custo1_3_1_, customers0_.id_customer as id_custo4_3_1_, customers0_.id_inventory_number as id_inven5_3_1_, customers0_.registered_date as register2_3_1_, customers0_.return_date as return_d3_3_1_, product1_.id_inventory_number as id_inven1_6_2_, product1_.id_amortization as id_amort9_6_2_, product1_.id_condition as id_cond10_6_2_, product1_.id_mol as id_mol11_6_2_, product1_.description as descript2_6_2_, product1_.discard_date as discard_3_6_2_, product1_.exploatation_start as exploata4_6_2_, product1_.is_discarded as is_disca5_6_2_, product1_.prod_status as prod_sta6_6_2_, product1_.product_type as product_7_6_2_, product1_.product_value as product_8_6_2_, amortizati2_.id_amortization as id_amort1_1_3_, amortizati2_.amort_deg as amort_de2_1_3_, mol3_.id_mol as id_mol1_5_4_, mol3_.email as email2_5_4_, mol3_.mol_name as mol_name3_5_4_, mol3_.password as password4_5_4_, mol3_.tel_num as tel_num5_5_4_, mol3_.username as username6_5_4_ from customer_boards customers0_ left outer join products product1_ on customers0_.id_inventory_number=product1_.id_inventory_number left outer join amortization amortizati2_ on product1_.id_amortization=amortizati2_.id_amortization left outer join mols mol3_ on product1_.id_mol=mol3_.id_mol where customers0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@734834ae]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2473065f]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10cd1459]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.amortDeg
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byAmortization.product
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCondition
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4337389a]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byMol
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byMol
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : description
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : discardDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : exploatationStart
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : isDiscarded
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodStatus
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : prodType
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : productValue
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : products
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74dd4cbc]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ccaf1a2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.byAmortization)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Condition, querySpaceUid=<gen:3>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.byCondition)
             - CollectionAttributeFetchImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:4>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.products)
                - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:5>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products].<elements>.products.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_mol11_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_inven1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Product)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_inven1_6_1_}
                - JOIN (JoinDefinedByMetadata(byAmortization)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization)
                      - SQL table alias mapping - amortizati1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_amort1_1_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products: select products0_.id_mol as id_mol11_6_0_, products0_.id_inventory_number as id_inven1_6_0_, products0_.id_inventory_number as id_inven1_6_1_, products0_.id_amortization as id_amort9_6_1_, products0_.id_condition as id_cond10_6_1_, products0_.id_mol as id_mol11_6_1_, products0_.description as descript2_6_1_, products0_.discard_date as discard_3_6_1_, products0_.exploatation_start as exploata4_6_1_, products0_.is_discarded as is_disca5_6_1_, products0_.prod_status as prod_sta6_6_1_, products0_.product_type as product_7_6_1_, products0_.product_value as product_8_6_1_, amortizati1_.id_amortization as id_amort1_1_2_, amortizati1_.amort_deg as amort_de2_1_2_ from products products0_ left outer join amortization amortizati1_ on products0_.id_amortization=amortizati1_.id_amortization where products0_.id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@259cae7b]
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f95a1ba]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a008a75]
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.cusName
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byCustomer.customers
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.email
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byCustomer.telNum
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : byInventoryNumber
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : registeredDate
[JavaFX Application Thread] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : returnDate
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
    - Returns
       - CollectionReturnImpl(collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products, querySpaceUid=<gen:0>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products])
          - (collection element) CollectionFetchableElementEntityGraph(entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, querySpaceUid=<gen:1>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products].<elements>)
             - EntityAttributeFetchImpl(entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, querySpaceUid=<gen:2>, path=[bg.tu_varna.sit.inventorymanagement.data.entities.Product.products].<elements>.byCustomer)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=bg.tu_varna.sit.inventorymanagement.data.entities.Product.products)
          - SQL table alias mapping - products0_
          - alias suffix - 0_
          - suffixed key columns - {id_inven5_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id_custo1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
                - SQL table alias mapping - products0_
                - alias suffix - 1_
                - suffixed key columns - {id_custo1_3_1_}
                - JOIN (JoinDefinedByMetadata(byCustomer)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
                      - SQL table alias mapping - customer1_
                      - alias suffix - 2_
                      - suffixed key columns - {id_custo1_4_2_}

[JavaFX Application Thread] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection bg.tu_varna.sit.inventorymanagement.data.entities.Product.products: select products0_.id_inventory_number as id_inven5_3_0_, products0_.id_customer_board as id_custo1_3_0_, products0_.id_customer_board as id_custo1_3_1_, products0_.id_customer as id_custo4_3_1_, products0_.id_inventory_number as id_inven5_3_1_, products0_.registered_date as register2_3_1_, products0_.return_date as return_d3_3_1_, customer1_.id_customer as id_custo1_4_2_, customer1_.cus_name as cus_name2_4_2_, customer1_.email as email3_4_2_, customer1_.tel_num as tel_num4_4_2_ from customer_boards products0_ left outer join customers customer1_ on products0_.id_customer=customer1_.id_customer where products0_.id_inventory_number=?
[JavaFX Application Thread] INFO  org.hibernate.orm.connections.access  - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@19d2e0b9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : admins
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : amortization
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : conditions
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : customer_boards
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : customers
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : mols
[JavaFX Application Thread] DEBUG org.hibernate.mapping.Table  - No alter strings for table : products
[JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[JavaFX Application Thread] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[JavaFX Application Thread] DEBUG org.hibernate.service.internal.SessionFactoryServiceRegistryImpl  - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@30672fa5
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 402558ff-a28f-49cd-8a20-3788b87462b1 (<unnamed>)
[JavaFX Application Thread] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[JavaFX Application Thread] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@329f7c01
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT a FROM bg.tu_varna.sit.inventorymanagement.data.entities.Admin a 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Admin'
       |     \-[ALIAS] Node: 'a'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'a'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Admin (a) -> admin0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : a -> admin0_.id_admin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} admin0_.id_admin ) ( FromClause{level=1} admins admin0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Admin): [admins]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Admin)
    |  | originalText: a
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [admins admin0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (admins)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'admin0_.id_admin as id_admin1_0_' {alias=a, className=bg.tu_varna.sit.inventorymanagement.data.entities.Admin, tableAlias=admin0_}
    |  \-[SQL_TOKEN] SqlFragment: 'admin0_.password as password2_0_, admin0_.username as username3_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[admin0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'admins admin0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=admins,tableAlias=admin0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Admin}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT a FROM bg.tu_varna.sit.inventorymanagement.data.entities.Admin a 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select admin0_.id_admin as id_admin1_0_, admin0_.password as password2_0_, admin0_.username as username3_0_ from admins admin0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        admin0_.id_admin as id_admin1_0_,
        admin0_.password as password2_0_,
        admin0_.username as username3_0_ 
    from
        admins admin0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = a1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = a2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Admin#2]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.AdminRepository  - Successfully got all admins
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Admin{idAdmin=2, password=2, username=a2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Admin{idAdmin=1, password=1, username=a1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT m FROM bg.tu_varna.sit.inventorymanagement.data.entities.Mol m 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Mol'
       |     \-[ALIAS] Node: 'm'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'm'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Mol (m) -> mol0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : m -> mol0_.id_mol
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} mol0_.id_mol ) ( FromClause{level=1} mols mol0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Mol): [mols]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Mol)
    |  | originalText: m
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [mols mol0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (mols)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'mol0_.id_mol as id_mol1_5_' {alias=m, className=bg.tu_varna.sit.inventorymanagement.data.entities.Mol, tableAlias=mol0_}
    |  \-[SQL_TOKEN] SqlFragment: 'mol0_.email as email2_5_, mol0_.mol_name as mol_name3_5_, mol0_.password as password4_5_, mol0_.tel_num as tel_num5_5_, mol0_.username as username6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[mol0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'mols mol0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=mols,tableAlias=mol0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Mol}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT m FROM bg.tu_varna.sit.inventorymanagement.data.entities.Mol m 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select mol0_.id_mol as id_mol1_5_, mol0_.email as email2_5_, mol0_.mol_name as mol_name3_5_, mol0_.password as password4_5_, mol0_.tel_num as tel_num5_5_, mol0_.username as username6_5_ from mols mol0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        mol0_.id_mol as id_mol1_5_,
        mol0_.email as email2_5_,
        mol0_.mol_name as mol_name3_5_,
        mol0_.password as password4_5_,
        mol0_.tel_num as tel_num5_5_,
        mol0_.username as username6_5_ 
    from
        mols mol0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = ivo@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Ivelin Belinov
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 321
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0886634213
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = i2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.MolRepository  - Successfully got  all Mols!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=321, telNum=0886634213, idMol=2, molName=Ivelin Belinov, email=ivo@mail.bg, products=<uninitialized>, username=i2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT cb FROM bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard cb 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'CustomerBoard'
       |     \-[ALIAS] Node: 'cb'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'cb'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard (cb) -> customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : cb -> customerbo0_.id_customer_board
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} customerbo0_.id_customer_board ) ( FromClause{level=1} customer_boards customerbo0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CustomerBoard): [customer_boards]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard)
    |  | originalText: cb
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [customer_boards customerbo0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customer_boards)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customerbo0_.id_customer_board as id_custo1_3_' {alias=cb, className=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard, tableAlias=customerbo0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customerbo0_.id_customer as id_custo4_3_, customerbo0_.id_inventory_number as id_inven5_3_, customerbo0_.registered_date as register2_3_, customerbo0_.return_date as return_d3_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cb], fromElementByTableAlias=[customerbo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customer_boards customerbo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cb,role=null,tableName=customer_boards,tableAlias=customerbo0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT cb FROM bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard cb 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select customerbo0_.id_customer_board as id_custo1_3_, customerbo0_.id_customer as id_custo4_3_, customerbo0_.id_inventory_number as id_inven5_3_, customerbo0_.registered_date as register2_3_, customerbo0_.return_date as return_d3_3_ from customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-11, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT cu FROM bg.tu_varna.sit.inventorymanagement.data.entities.Customer cu 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Customer'
       |     \-[ALIAS] Node: 'cu'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'cu'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Customer (cu) -> customer0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : cu -> customer0_.id_customer
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} customer0_.id_customer ) ( FromClause{level=1} customers customer0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Customer): [customers]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Customer)
    |  | originalText: cu
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [customers customer0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customers)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'customer0_.id_customer as id_custo1_4_' {alias=cu, className=bg.tu_varna.sit.inventorymanagement.data.entities.Customer, tableAlias=customer0_}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.cus_name as cus_name2_4_, customer0_.email as email3_4_, customer0_.tel_num as tel_num4_4_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cu], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'customers customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cu,role=null,tableName=customers,tableAlias=customer0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Customer}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT cu FROM bg.tu_varna.sit.inventorymanagement.data.entities.Customer cu 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select customer0_.id_customer as id_custo1_4_, customer0_.cus_name as cus_name2_4_, customer0_.email as email3_4_, customer0_.tel_num as tel_num4_4_ from customers customer0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_,
        customer0_.cus_name as cus_name2_4_,
        customer0_.email as email3_4_,
        customer0_.tel_num as tel_num4_4_ 
    from
        customers customer0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan1@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564895
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerRepository  - Successfully got all customers!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564895, customers=<uninitialized>, email=hakan1@mail.bg, idCustomer=3}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT p FROM bg.tu_varna.sit.inventorymanagement.data.entities.Product p 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
       |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
       |     |  |  |  |  |  \-[IDENT] Node: 'sit'
       |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
       |     |  |  |  \-[IDENT] Node: 'data'
       |     |  |  \-[IDENT] Node: 'entities'
       |     |  \-[IDENT] Node: 'Product'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Product (p) -> product0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : p -> product0_.id_inventory_number
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} product0_.id_inventory_number ) ( FromClause{level=1} products product0_ ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [products]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Product)
    |  | originalText: p
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [products product0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.id_inventory_number as id_inven1_6_' {alias=p, className=bg.tu_varna.sit.inventorymanagement.data.entities.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.id_amortization as id_amort9_6_, product0_.id_condition as id_cond10_6_, product0_.id_mol as id_mol11_6_, product0_.description as descript2_6_, product0_.discard_date as discard_3_6_, product0_.exploatation_start as exploata4_6_, product0_.is_discarded as is_disca5_6_, product0_.prod_status as prod_sta6_6_, product0_.product_type as product_7_6_, product0_.product_value as product_8_6_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'products product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=products,tableAlias=product0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Product}}

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT p FROM bg.tu_varna.sit.inventorymanagement.data.entities.Product p 
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select product0_.id_inventory_number as id_inven1_6_, product0_.id_amortization as id_amort9_6_, product0_.id_condition as id_cond10_6_, product0_.id_mol as id_mol11_6_, product0_.description as descript2_6_, product0_.discard_date as discard_3_6_, product0_.exploatation_start as exploata4_6_, product0_.is_discarded as is_disca5_6_, product0_.prod_status as prod_sta6_6_, product0_.product_type as product_7_6_, product0_.product_value as product_8_6_ from products product0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_,
        product0_.id_amortization as id_amort9_6_,
        product0_.id_condition as id_cond10_6_,
        product0_.id_mol as id_mol11_6_,
        product0_.description as descript2_6_,
        product0_.discard_date as discard_3_6_,
        product0_.exploatation_start as exploata4_6_,
        product0_.is_discarded as is_disca5_6_,
        product0_.prod_status as prod_sta6_6_,
        product0_.product_type as product_7_6_,
        product0_.product_value as product_8_6_ 
    from
        products product0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.3
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = ivo@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Ivelin Belinov
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 321
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0886634213
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = i2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asdasd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2026-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2022-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 5423.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = kjhkhy
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2021-12-10
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-02
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = МА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 456456.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Successfully got all Products!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2026-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2, productValue=5423.0, exploatationStart=2022-12-01, prodStatus=true, idInventoryNumber=2, description=asdasd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=321, telNum=0886634213, idMol=2, molName=Ivelin Belinov, email=ivo@mail.bg, products=<uninitialized>, username=i2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2021-12-10, byAmortization=null, productValue=456456.0, exploatationStart=2021-12-02, prodStatus=true, idInventoryNumber=4, description=kjhkhy, byCondition=<uninitialized>, prodType=МА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#2, amortDeg=0.3, idAmortization=2}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-11, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_,
        customer0_.cus_name as cus_name2_4_,
        customer0_.email as email3_4_,
        customer0_.tel_num as tel_num4_4_ 
    from
        customers customer0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan1@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564895
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerRepository  - Successfully got all customers!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564895, customers=<uninitialized>, email=hakan1@mail.bg, idCustomer=3}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_,
        product0_.id_amortization as id_amort9_6_,
        product0_.id_condition as id_cond10_6_,
        product0_.id_mol as id_mol11_6_,
        product0_.description as descript2_6_,
        product0_.discard_date as discard_3_6_,
        product0_.exploatation_start as exploata4_6_,
        product0_.is_discarded as is_disca5_6_,
        product0_.prod_status as prod_sta6_6_,
        product0_.product_type as product_7_6_,
        product0_.product_value as product_8_6_ 
    from
        products product0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.3
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = ivo@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Ivelin Belinov
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 321
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0886634213
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = i2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asdasd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2026-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2022-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 5423.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = kjhkhy
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2021-12-10
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-02
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = МА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 456456.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Successfully got all Products!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2026-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2, productValue=5423.0, exploatationStart=2022-12-01, prodStatus=true, idInventoryNumber=2, description=asdasd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=321, telNum=0886634213, idMol=2, molName=Ivelin Belinov, email=ivo@mail.bg, products=<uninitialized>, username=i2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2021-12-10, byAmortization=null, productValue=456456.0, exploatationStart=2021-12-02, prodStatus=true, idInventoryNumber=4, description=kjhkhy, byCondition=<uninitialized>, prodType=МА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#2, amortDeg=0.3, idAmortization=2}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_,
        customer0_.cus_name as cus_name2_4_,
        customer0_.email as email3_4_,
        customer0_.tel_num as tel_num4_4_ 
    from
        customers customer0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan1@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564895
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerRepository  - Successfully got all customers!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564895, customers=<uninitialized>, email=hakan1@mail.bg, idCustomer=3}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_,
        product0_.id_amortization as id_amort9_6_,
        product0_.id_condition as id_cond10_6_,
        product0_.id_mol as id_mol11_6_,
        product0_.description as descript2_6_,
        product0_.discard_date as discard_3_6_,
        product0_.exploatation_start as exploata4_6_,
        product0_.is_discarded as is_disca5_6_,
        product0_.prod_status as prod_sta6_6_,
        product0_.product_type as product_7_6_,
        product0_.product_value as product_8_6_ 
    from
        products product0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.3
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = ivo@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Ivelin Belinov
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 321
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0886634213
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = i2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asdasd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2026-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2022-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 5423.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = kjhkhy
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2021-12-10
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-02
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = МА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 456456.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Successfully got all Products!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2026-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2, productValue=5423.0, exploatationStart=2022-12-01, prodStatus=true, idInventoryNumber=2, description=asdasd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=321, telNum=0886634213, idMol=2, molName=Ivelin Belinov, email=ivo@mail.bg, products=<uninitialized>, username=i2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2021-12-10, byAmortization=null, productValue=456456.0, exploatationStart=2021-12-02, prodStatus=true, idInventoryNumber=4, description=kjhkhy, byCondition=<uninitialized>, prodType=МА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#2, amortDeg=0.3, idAmortization=2}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: SELECT p FROM bg.tu_varna.sit.inventorymanagement.data.entities.Product p WHERE idInventoryNumber =1
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[IDENT] Node: 'bg'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'tu_varna'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'sit'
    |  |     |  |  |  |  \-[IDENT] Node: 'inventorymanagement'
    |  |     |  |  |  \-[IDENT] Node: 'data'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'idInventoryNumber'
          \-[NUM_INT] Node: '1'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : bg.tu_varna.sit.inventorymanagement.data.entities.Product (p) -> product0_
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : p -> product0_.id_inventory_number
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : {synthetic-alias} -> {synthetic-alias}
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.DotNode  - getDataType() : idInventoryNumber -> org.hibernate.type.IntegerType@68f1211a
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : {synthetic-alias}.idInventoryNumber -> product0_.id_inventory_number
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} product0_.id_inventory_number ) ( FromClause{level=1} products product0_ ) ( WHERE ( = ( product0_.id_inventory_number {synthetic-alias} idInventoryNumber ) 1 ) ) )
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [products]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Product)
    |  | originalText: p
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          | path: {synthetic-alias}.idInventoryNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(bg.tu_varna.sit.inventorymanagement.data.entities.Product)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: idInventoryNumber
          \-LiteralNode

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [products product0_]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (products)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.id_inventory_number as id_inven1_6_' {alias=p, className=bg.tu_varna.sit.inventorymanagement.data.entities.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.id_amortization as id_amort9_6_, product0_.id_condition as id_cond10_6_, product0_.id_mol as id_mol11_6_, product0_.description as descript2_6_, product0_.discard_date as discard_3_6_, product0_.exploatation_start as exploata4_6_, product0_.is_discarded as is_disca5_6_, product0_.prod_status as prod_sta6_6_, product0_.product_type as product_7_6_, product0_.product_value as product_8_6_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'products product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=products,tableAlias=product0_,origin=null,columns={,className=bg.tu_varna.sit.inventorymanagement.data.entities.Product}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.id_inventory_number' {propertyName=idInventoryNumber,dereferenceType=PRIMITIVE,getPropertyPath=idInventoryNumber,path={synthetic-alias}.idInventoryNumber,tableAlias=product0_,className=bg.tu_varna.sit.inventorymanagement.data.entities.Product,classAlias=p}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'idInventoryNumber' {originalText=idInventoryNumber}
          \-[NUM_INT] LiteralNode: '1'

[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: SELECT p FROM bg.tu_varna.sit.inventorymanagement.data.entities.Product p WHERE idInventoryNumber =1
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select product0_.id_inventory_number as id_inven1_6_, product0_.id_amortization as id_amort9_6_, product0_.id_condition as id_cond10_6_, product0_.id_mol as id_mol11_6_, product0_.description as descript2_6_, product0_.discard_date as discard_3_6_, product0_.exploatation_start as exploata4_6_, product0_.is_discarded as is_disca5_6_, product0_.prod_status as prod_sta6_6_, product0_.product_type as product_7_6_, product0_.product_value as product_8_6_ from products product0_ where product0_.id_inventory_number=1
[JavaFX Application Thread] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_,
        product0_.id_amortization as id_amort9_6_,
        product0_.id_condition as id_cond10_6_,
        product0_.id_mol as id_mol11_6_,
        product0_.description as descript2_6_,
        product0_.discard_date as discard_3_6_,
        product0_.exploatation_start as exploata4_6_,
        product0_.is_discarded as is_disca5_6_,
        product0_.prod_status as prod_sta6_6_,
        product0_.product_type as product_7_6_,
        product0_.product_value as product_8_6_ 
    from
        products product0_ 
    where
        product0_.id_inventory_number=1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Successfully got  Product!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.engine.spi.ActionQueue  - Executing identity-insert immediately
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    insert 
    into
        customer_boards
        (id_customer, id_inventory_number, registered_date, return_date) 
    values
        (?, ?, ?, ?)
[JavaFX Application Thread] DEBUG org.hibernate.id.IdentifierGeneratorHelper  - Natively generated identity: 65
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board saved successfully
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 4 updates, 0 deletions to 5 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=null, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=65}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        customers 
    set
        cus_name=?,
        email=?,
        tel_num=? 
    where
        id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        products 
    set
        id_amortization=?,
        id_condition=?,
        id_mol=?,
        description=?,
        discard_date=?,
        exploatation_start=?,
        is_discarded=?,
        prod_status=?,
        product_type=?,
        product_value=? 
    where
        id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        amortization 
    set
        amort_deg=? 
    where
        id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        mols 
    set
        email=?,
        mol_name=?,
        password=?,
        tel_num=?,
        username=? 
    where
        id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product updated successfully
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        products 
    set
        id_amortization=?,
        id_condition=?,
        id_mol=?,
        description=?,
        discard_date=?,
        exploatation_start=?,
        is_discarded=?,
        prod_status=?,
        product_type=?,
        product_value=? 
    where
        id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        amortization 
    set
        amort_deg=? 
    where
        id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        mols 
    set
        email=?,
        mol_name=?,
        password=?,
        tel_num=?,
        username=? 
    where
        id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=null, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=65}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-11, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_,
        customer0_.cus_name as cus_name2_4_,
        customer0_.email as email3_4_,
        customer0_.tel_num as tel_num4_4_ 
    from
        customers customer0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan1@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564895
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#3]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerRepository  - Successfully got all customers!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#3] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564895, customers=<uninitialized>, email=hakan1@mail.bg, idCustomer=3}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_,
        product0_.id_amortization as id_amort9_6_,
        product0_.id_condition as id_cond10_6_,
        product0_.id_mol as id_mol11_6_,
        product0_.description as descript2_6_,
        product0_.discard_date as discard_3_6_,
        product0_.exploatation_start as exploata4_6_,
        product0_.is_discarded as is_disca5_6_,
        product0_.prod_status as prod_sta6_6_,
        product0_.product_type as product_7_6_,
        product0_.product_value as product_8_6_ 
    from
        products product0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.3
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = ivo@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Ivelin Belinov
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 321
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0886634213
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = i2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asdasd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2026-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2022-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 5423.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = kjhkhy
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2021-12-10
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-02
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = МА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 456456.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Successfully got all Products!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#4] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 5 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2026-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#2, productValue=5423.0, exploatationStart=2022-12-01, prodStatus=true, idInventoryNumber=2, description=asdasd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=321, telNum=0886634213, idMol=2, molName=Ivelin Belinov, email=ivo@mail.bg, products=<uninitialized>, username=i2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2021-12-10, byAmortization=null, productValue=456456.0, exploatationStart=2021-12-02, prodStatus=true, idInventoryNumber=4, description=kjhkhy, byCondition=<uninitialized>, prodType=МА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#2, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#2, amortDeg=0.3, idAmortization=2}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_,
        product0_.id_amortization as id_amort9_6_,
        product0_.id_condition as id_cond10_6_,
        product0_.id_mol as id_mol11_6_,
        product0_.description as descript2_6_,
        product0_.discard_date as discard_3_6_,
        product0_.exploatation_start as exploata4_6_,
        product0_.is_discarded as is_disca5_6_,
        product0_.prod_status as prod_sta6_6_,
        product0_.product_type as product_7_6_,
        product0_.product_value as product_8_6_ 
    from
        products product0_ 
    where
        product0_.id_inventory_number=1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        amortizati0_.id_amortization as id_amort1_1_0_,
        amortizati0_.amort_deg as amort_de2_1_0_,
        product1_.id_inventory_number as id_inven1_6_1_,
        product1_.id_amortization as id_amort9_6_1_,
        product1_.id_condition as id_cond10_6_1_,
        product1_.id_mol as id_mol11_6_1_,
        product1_.description as descript2_6_1_,
        product1_.discard_date as discard_3_6_1_,
        product1_.exploatation_start as exploata4_6_1_,
        product1_.is_discarded as is_disca5_6_1_,
        product1_.prod_status as prod_sta6_6_1_,
        product1_.product_type as product_7_6_1_,
        product1_.product_value as product_8_6_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        amortization amortizati0_ 
    left outer join
        products product1_ 
            on amortizati0_.id_amortization=product1_.id_amortization 
    left outer join
        mols mol2_ 
            on product1_.id_mol=mol2_.id_mol 
    where
        amortizati0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Loading entity: [bg.tu_varna.sit.inventorymanagement.data.entities.Product#4]
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_2_,
        product0_.id_amortization as id_amort9_6_2_,
        product0_.id_condition as id_cond10_6_2_,
        product0_.id_mol as id_mol11_6_2_,
        product0_.description as descript2_6_2_,
        product0_.discard_date as discard_3_6_2_,
        product0_.exploatation_start as exploata4_6_2_,
        product0_.is_discarded as is_disca5_6_2_,
        product0_.prod_status as prod_sta6_6_2_,
        product0_.product_type as product_7_6_2_,
        product0_.product_value as product_8_6_2_,
        amortizati1_.id_amortization as id_amort1_1_0_,
        amortizati1_.amort_deg as amort_de2_1_0_,
        mol2_.id_mol as id_mol1_5_1_,
        mol2_.email as email2_5_1_,
        mol2_.mol_name as mol_name3_5_1_,
        mol2_.password as password4_5_1_,
        mol2_.tel_num as tel_num5_5_1_,
        mol2_.username as username6_5_1_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1], EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Done entity load
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Successfully got  Product!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=null, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=65}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-11, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[Hibernate Connection Pool Validation Thread] DEBUG org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl  - Connection pool now considered primed; min-size will be maintained
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=null, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=65}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-11, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Customer board updated successfully
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 5 updates, 0 deletions to 5 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 3 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=false, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-17, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        customer_boards 
    set
        id_customer=?,
        id_inventory_number=?,
        registered_date=?,
        return_date=? 
    where
        id_customer_board=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        customers 
    set
        cus_name=?,
        email=?,
        tel_num=? 
    where
        id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        products 
    set
        id_amortization=?,
        id_condition=?,
        id_mol=?,
        description=?,
        discard_date=?,
        exploatation_start=?,
        is_discarded=?,
        prod_status=?,
        product_type=?,
        product_value=? 
    where
        id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        amortization 
    set
        amort_deg=? 
    where
        id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        mols 
    set
        email=?,
        mol_name=?,
        password=?,
        tel_num=?,
        username=? 
    where
        id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.ProductRepository  - Product updated successfully
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        products 
    set
        id_amortization=?,
        id_condition=?,
        id_mol=?,
        description=?,
        discard_date=?,
        exploatation_start=?,
        is_discarded=?,
        prod_status=?,
        product_type=?,
        product_value=? 
    where
        id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        amortization 
    set
        amort_deg=? 
    where
        id_amortization=?
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    update
        mols 
    set
        email=?,
        mol_name=?,
        password=?,
        tel_num=?,
        username=? 
    where
        id_mol=?
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=null, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=65}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-17, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customerbo0_.id_customer_board as id_custo1_3_,
        customerbo0_.id_customer as id_custo4_3_,
        customerbo0_.id_inventory_number as id_inven5_3_,
        customerbo0_.registered_date as register2_3_,
        customerbo0_.return_date as return_d3_3_ 
    from
        customer_boards customerbo0_
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result set row: 2
[JavaFX Application Thread] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Hakan
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = hakan@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 04564894
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        product0_.id_inventory_number as id_inven1_6_0_,
        product0_.id_amortization as id_amort9_6_0_,
        product0_.id_condition as id_cond10_6_0_,
        product0_.id_mol as id_mol11_6_0_,
        product0_.description as descript2_6_0_,
        product0_.discard_date as discard_3_6_0_,
        product0_.exploatation_start as exploata4_6_0_,
        product0_.is_discarded as is_disca5_6_0_,
        product0_.prod_status as prod_sta6_6_0_,
        product0_.product_type as product_7_6_0_,
        product0_.product_value as product_8_6_0_,
        amortizati1_.id_amortization as id_amort1_1_1_,
        amortizati1_.amort_deg as amort_de2_1_1_,
        mol2_.id_mol as id_mol1_5_2_,
        mol2_.email as email2_5_2_,
        mol2_.mol_name as mol_name3_5_2_,
        mol2_.password as password4_5_2_,
        mol2_.tel_num as tel_num5_5_2_,
        mol2_.username as username6_5_2_ 
    from
        products product0_ 
    left outer join
        amortization amortizati1_ 
            on product0_.id_amortization=amortizati1_.id_amortization 
    left outer join
        mols mol2_ 
            on product0_.id_mol=mol2_.id_mol 
    where
        product0_.id_inventory_number=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byAmortization` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byAmortization`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCondition` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCondition`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byMol` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byMol`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `description` : value = asd
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`description`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `discardDate` : value = 2025-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`discardDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `exploatationStart` : value = 2021-12-01
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`exploatationStart`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `isDiscarded` : value = false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`isDiscarded`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodStatus` : value = true
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodStatus`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `prodType` : value = ДМА
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`prodType`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `productValue` : value = 123.0
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`productValue`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Product#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `amortDeg` : value = 0.5
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`amortDeg`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `product` : value = 4
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`product`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = tedi@abv.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `molName` : value = Teodora Trifonova
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`molName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `password` : value = 123
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`password`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `products` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`products`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 0894587567
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `username` : value = t1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`username`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Product#1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#60]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.SQL  - 
    select
        customer0_.id_customer as id_custo1_4_0_,
        customer0_.cus_name as cus_name2_4_0_,
        customer0_.email as email3_4_0_,
        customer0_.tel_num as tel_num4_4_0_ 
    from
        customers customer0_ 
    where
        customer0_.id_customer=?
[JavaFX Application Thread] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `cusName` : value = Nihat
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`cusName`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `customers` : value = NOT NULL COLLECTION
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`customers`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `email` : value = nihat@mail.bg
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`email`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `telNum` : value = 06946819
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`telNum`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2]
[JavaFX Application Thread] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = 2021-12-11
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#61]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byCustomer` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byCustomer`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `byInventoryNumber` : value = 1
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`byInventoryNumber`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `registeredDate` : value = 2021-12-17
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`registeredDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `returnDate` : value = null
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`returnDate`)  - enhanced for lazy-loading? - false
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard#65]
[JavaFX Application Thread] INFO  bg.tu_varna.sit.inventorymanagement.data.repositories.CustomerBoardRepository  - Successfully got  all Customer Boards!
[JavaFX Application Thread] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Product.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Mol.products#1] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2], was: [bg.tu_varna.sit.inventorymanagement.data.entities.Customer.customers#2] (uninitialized)
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 8 objects
[JavaFX Application Thread] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=null, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=65}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-11, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#2, registeredDate=2021-12-11, idCustomerBoard=61}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Mol{password=123, telNum=0894587567, idMol=1, molName=Teodora Trifonova, email=tedi@abv.bg, products=<uninitialized>, username=t1}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.CustomerBoard{byInventoryNumber=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, returnDate=2021-12-17, byCustomer=bg.tu_varna.sit.inventorymanagement.data.entities.Customer#1, registeredDate=2021-12-17, idCustomerBoard=60}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Product{discardDate=2025-12-01, byAmortization=bg.tu_varna.sit.inventorymanagement.data.entities.Amortization#4, productValue=123.0, exploatationStart=2021-12-01, prodStatus=true, idInventoryNumber=1, description=asd, byCondition=<uninitialized>, prodType=ДМА, byMol=bg.tu_varna.sit.inventorymanagement.data.entities.Mol#1, isDiscarded=false, products=<uninitialized>}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Amortization{product=bg.tu_varna.sit.inventorymanagement.data.entities.Product#1, amortDeg=0.5, idAmortization=4}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Nihat, telNum=06946819, customers=<uninitialized>, email=nihat@mail.bg, idCustomer=2}
[JavaFX Application Thread] DEBUG org.hibernate.internal.util.EntityPrinter  - bg.tu_varna.sit.inventorymanagement.data.entities.Customer{cusName=Hakan, telNum=04564894, customers=<uninitialized>, email=hakan@mail.bg, idCustomer=1}
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
[JavaFX Application Thread] DEBUG org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl  - Initiating JDBC connection release from afterTransaction
